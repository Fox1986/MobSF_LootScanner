
____________________sql____________________
        0: [2020-10-16 01:37:00.081] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        1: [2020-10-16 01:37:00.081] prepare took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        2: [2020-10-16 01:37:00.077] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        3: [2020-10-16 01:37:00.077] prepare took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        4: [2020-10-16 01:37:00.076] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT OR REPLACE  INTO icons(lastUpdated,icon_color,profileId,icon,label,system_state,componentName,icon_low_res,version) VALUES (?,?,?,?,?,?,?,?,?)"
        5: [2020-10-16 01:37:00.076] prepare took 0ms - succeeded, sql="INSERT OR REPLACE  INTO icons(lastUpdated,icon_color,profileId,icon,label,system_state,componentName,icon_low_res,version) VALUES (?,?,?,?,?,?,?,?,?)"
        6: [2020-10-16 01:37:00.061] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        7: [2020-10-16 01:37:00.061] prepare took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        8: [2020-10-16 01:36:49.170] executeForChangedRowCount took 1ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        9: [2020-10-16 01:36:49.170] prepare took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        10: [2020-10-16 01:36:49.168] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        11: [2020-10-16 01:36:49.168] prepare took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        12: [2020-10-16 01:36:49.149] executeForChangedRowCount took 10ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        13: [2020-10-16 01:36:49.149] prepare took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        14: [2020-10-16 01:36:49.116] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        15: [2020-10-16 01:36:49.116] prepare took 1ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        16: [2020-10-16 01:36:49.112] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT OR REPLACE  INTO icons(lastUpdated,icon_color,profileId,icon,label,system_state,componentName,icon_low_res,version) VALUES (?,?,?,?,?,?,?,?,?)"
        17: [2020-10-16 01:36:49.112] prepare took 0ms - succeeded, sql="INSERT OR REPLACE  INTO icons(lastUpdated,icon_color,profileId,icon,label,system_state,componentName,icon_low_res,version) VALUES (?,?,?,?,?,?,?,?,?)"
        18: [2020-10-16 01:36:49.083] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        19: [2020-10-16 01:36:49.083] prepare took 0ms - succeeded, sql="DELETE FROM icons WHERE componentName LIKE ? AND profileId = ?"
        0: [2020-10-16 01:36:09.712] executeForCursorWindow took 0ms - succeeded, sql="SELECT * FROM favorites"
        1: [2020-10-16 01:36:09.712] prepare took 0ms - succeeded, sql="SELECT * FROM favorites"
        2: [2020-10-16 01:36:09.711] executeForCursorWindow took 0ms - succeeded, sql="SELECT * FROM workspaceScreens ORDER BY screenRank"
        3: [2020-10-16 01:36:09.711] prepare took 0ms - succeeded, sql="SELECT * FROM workspaceScreens ORDER BY screenRank"
        4: [2020-10-16 01:36:09.710] executeForCursorWindow took 0ms - succeeded, sql="SELECT MAX(_id) FROM workspaceScreens"
        5: [2020-10-16 01:36:09.710] prepare took 0ms - succeeded, sql="SELECT MAX(_id) FROM workspaceScreens"
        6: [2020-10-16 01:36:09.710] executeForCursorWindow took 0ms - succeeded, sql="SELECT MAX(_id) FROM favorites"
        7: [2020-10-16 01:36:09.710] prepare took 0ms - succeeded, sql="SELECT MAX(_id) FROM favorites"
        8: [2020-10-16 01:36:09.710] executeForCursorWindow took 0ms - succeeded, sql="SELECT DISTINCT tbl_name FROM sqlite_master WHERE tbl_name = ?"
        9: [2020-10-16 01:36:09.710] prepare took 0ms - succeeded, sql="SELECT DISTINCT tbl_name FROM sqlite_master WHERE tbl_name = ?"
        10: [2020-10-16 01:36:09.710] executeForCursorWindow took 0ms - succeeded, sql="SELECT DISTINCT tbl_name FROM sqlite_master WHERE tbl_name = ?"
        11: [2020-10-16 01:36:09.710] prepare took 0ms - succeeded, sql="SELECT DISTINCT tbl_name FROM sqlite_master WHERE tbl_name = ?"
        12: [2020-10-16 01:36:09.709] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        13: [2020-10-16 01:36:09.709] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        14: [2020-10-16 01:36:09.709] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint=100"
        15: [2020-10-16 01:36:09.709] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint"
        16: [2020-10-16 01:36:09.709] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit=524288"
        17: [2020-10-16 01:36:09.709] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit"
        18: [2020-10-16 01:36:09.709] execute took 0ms - succeeded, sql="PRAGMA synchronous=NORMAL"
        19: [2020-10-16 01:36:09.709] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        0: [2020-10-16 01:37:00.082] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        1: [2020-10-16 01:37:00.082] prepare took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        2: [2020-10-16 01:37:00.078] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        3: [2020-10-16 01:37:00.078] prepare took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        4: [2020-10-16 01:37:00.076] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        5: [2020-10-16 01:37:00.076] prepare took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        6: [2020-10-16 01:36:49.177] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        7: [2020-10-16 01:36:49.177] prepare took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        8: [2020-10-16 01:36:49.169] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        9: [2020-10-16 01:36:49.169] prepare took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        10: [2020-10-16 01:36:49.164] executeForChangedRowCount took 1ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        11: [2020-10-16 01:36:49.164] prepare took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        12: [2020-10-16 01:36:49.129] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        13: [2020-10-16 01:36:49.129] prepare took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        14: [2020-10-16 01:36:49.114] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        15: [2020-10-16 01:36:49.114] prepare took 0ms - succeeded, sql="DELETE FROM shortcut_and_widget_previews WHERE packageName = ? AND profileId = ?"
        16: [2020-10-16 01:36:10.913] executeForCursorWindow took 0ms - succeeded, sql="SELECT profileId, packageName, lastUpdated, version FROM shortcut_and_widget_previews"
        17: [2020-10-16 01:36:10.913] prepare took 0ms - succeeded, sql="SELECT profileId, packageName, lastUpdated, version FROM shortcut_and_widget_previews"
        18: [2020-10-16 01:36:10.913] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        19: [2020-10-16 01:36:10.913] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        0: [2020-10-16 01:36:52.620] execute took 0ms - succeeded, sql="ROLLBACK;"
        1: [2020-10-16 01:36:52.620] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM notifications WHERE 1=1 AND pk = (?)"
        2: [2020-10-16 01:36:52.620] prepare took 0ms - succeeded, sql="SELECT data FROM notifications WHERE 1=1 AND pk = (?)"
        3: [2020-10-16 01:36:52.620] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        4: [2020-10-16 01:36:52.617] execute took 0ms - succeeded, sql="ROLLBACK;"
        5: [2020-10-16 01:36:52.617] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM notifications WHERE 1=1 AND pk = (?)"
        6: [2020-10-16 01:36:52.617] prepare took 0ms - succeeded, sql="SELECT data FROM notifications WHERE 1=1 AND pk = (?)"
        7: [2020-10-16 01:36:52.617] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        8: [2020-10-16 01:36:52.586] execute took 0ms - succeeded, sql="ROLLBACK;"
        9: [2020-10-16 01:36:52.586] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM notifications WHERE 1=1 AND pk = (?)"
        10: [2020-10-16 01:36:52.586] prepare took 0ms - succeeded, sql="SELECT data FROM notifications WHERE 1=1 AND pk = (?)"
        11: [2020-10-16 01:36:52.586] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        12: [2020-10-16 01:36:52.586] execute took 0ms - succeeded, sql="ROLLBACK;"
        13: [2020-10-16 01:36:52.586] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM notifications WHERE 1=1 AND pk = (?)"
        14: [2020-10-16 01:36:52.586] prepare took 0ms - succeeded, sql="SELECT data FROM notifications WHERE 1=1 AND pk = (?)"
        15: [2020-10-16 01:36:52.586] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        16: [2020-10-16 01:36:47.351] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM notifications WHERE ((1=1 AND account_name is null) OR (1=1 AND account_name is null)) AND (1=1 AND notification_count = (?))"
        17: [2020-10-16 01:36:47.347] prepare took 0ms - succeeded, sql="SELECT data FROM notifications WHERE ((1=1 AND account_name is null) OR (1=1 AND account_name is null)) AND (1=1 AND notification_count = (?))"
        18: [2020-10-16 01:36:47.313] execute took 34ms - succeeded, sql="COMMIT;"
        19: [2020-10-16 01:36:47.313] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        0: [2020-10-16 01:36:52.807] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM jobs WHERE 1=1"
        1: [2020-10-16 01:36:52.807] prepare took 0ms - succeeded, sql="SELECT data FROM jobs WHERE 1=1"
        2: [2020-10-16 01:36:52.784] execute took 23ms - succeeded, sql="COMMIT;"
        3: [2020-10-16 01:36:52.784] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM jobs WHERE 1=1 AND pk = (?)"
        4: [2020-10-16 01:36:52.784] prepare took 0ms - succeeded, sql="DELETE FROM jobs WHERE 1=1 AND pk = (?)"
        5: [2020-10-16 01:36:52.784] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM jobs WHERE 1=1 AND pk = (?)"
        6: [2020-10-16 01:36:52.783] prepare took 0ms - succeeded, sql="SELECT data FROM jobs WHERE 1=1 AND pk = (?)"
        7: [2020-10-16 01:36:52.783] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        8: [2020-10-16 01:36:52.529] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM jobs WHERE 1=1"
        9: [2020-10-16 01:36:52.529] prepare took 0ms - succeeded, sql="SELECT data FROM jobs WHERE 1=1"
        10: [2020-10-16 01:36:51.569] execute took 4ms - succeeded, sql="COMMIT;"
        11: [2020-10-16 01:36:51.569] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM jobs WHERE 1=1 AND pk = (?)"
        12: [2020-10-16 01:36:51.569] prepare took 0ms - succeeded, sql="DELETE FROM jobs WHERE 1=1 AND pk = (?)"
        13: [2020-10-16 01:36:51.568] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM jobs WHERE 1=1 AND pk = (?)"
        14: [2020-10-16 01:36:51.568] prepare took 0ms - succeeded, sql="SELECT data FROM jobs WHERE 1=1 AND pk = (?)"
        15: [2020-10-16 01:36:51.568] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        16: [2020-10-16 01:36:51.253] execute took 11ms - succeeded, sql="COMMIT;"
        17: [2020-10-16 01:36:51.253] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT OR REPLACE  INTO jobs(consumer_id,is_running,pk,data,job_id) VALUES (?,?,?,?,?)"
        18: [2020-10-16 01:36:51.253] prepare took 0ms - succeeded, sql="INSERT OR REPLACE  INTO jobs(consumer_id,is_running,pk,data,job_id) VALUES (?,?,?,?,?)"
        19: [2020-10-16 01:36:51.252] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        0: [2020-10-16 01:36:49.150] execute took 6ms - succeeded, sql="COMMIT;"
        1: [2020-10-16 01:36:49.150] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT OR REPLACE  INTO frosting(frosting_id,apk_path,last_updated,pk,data) VALUES (?,?,?,?,?)"
        2: [2020-10-16 01:36:49.150] prepare took 0ms - succeeded, sql="INSERT OR REPLACE  INTO frosting(frosting_id,apk_path,last_updated,pk,data) VALUES (?,?,?,?,?)"
        3: [2020-10-16 01:36:49.150] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        4: [2020-10-16 01:36:49.146] execute took 4ms - succeeded, sql="COMMIT;"
        5: [2020-10-16 01:36:49.146] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        6: [2020-10-16 01:36:49.146] prepare took 0ms - succeeded, sql="PRAGMA user_version = 1"
        7: [2020-10-16 01:36:49.146] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE frosting_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        8: [2020-10-16 01:36:49.146] prepare took 0ms - succeeded, sql="CREATE TABLE frosting_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        9: [2020-10-16 01:36:49.145] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE frosting (frosting_id INTEGER, apk_path TEXT, last_updated INTEGER, pk TEXT PRIMARY KEY, data BLOB)"
        10: [2020-10-16 01:36:49.145] prepare took 0ms - succeeded, sql="CREATE TABLE frosting (frosting_id INTEGER, apk_path TEXT, last_updated INTEGER, pk TEXT PRIMARY KEY, data BLOB)"
        11: [2020-10-16 01:36:49.145] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        12: [2020-10-16 01:36:49.145] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        13: [2020-10-16 01:36:49.145] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        14: [2020-10-16 01:36:49.145] execute took 0ms - succeeded, sql="PRAGMA synchronous=FULL"
        15: [2020-10-16 01:36:49.145] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        16: [2020-10-16 01:36:49.139] executeForString took 6ms - succeeded, sql="PRAGMA journal_mode=TRUNCATE"
        17: [2020-10-16 01:36:49.139] executeForString took 0ms - succeeded, sql="PRAGMA journal_mode"
        18: [2020-10-16 01:36:49.139] execute took 0ms - succeeded, sql="COMMIT"
        19: [2020-10-16 01:36:49.139] execute took 0ms - succeeded, sql="REINDEX LOCALIZED"
        0: [2020-10-16 01:36:11.007] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM install_requests WHERE 1=1 AND state in (?, ?, ?, ?, ?)"
        1: [2020-10-16 01:36:11.007] prepare took 0ms - succeeded, sql="SELECT data FROM install_requests WHERE 1=1 AND state in (?, ?, ?, ?, ?)"
        2: [2020-10-16 01:36:11.006] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM install_requests WHERE 1=1 AND state in (?, ?, ?, ?, ?)"
        3: [2020-10-16 01:36:11.006] prepare took 0ms - succeeded, sql="SELECT data FROM install_requests WHERE 1=1 AND state in (?, ?, ?, ?, ?)"
        4: [2020-10-16 01:36:11.004] execute took 2ms - succeeded, sql="COMMIT;"
        5: [2020-10-16 01:36:11.004] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        6: [2020-10-16 01:36:11.004] prepare took 0ms - succeeded, sql="PRAGMA user_version = 1"
        7: [2020-10-16 01:36:11.004] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE install_requests_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        8: [2020-10-16 01:36:11.004] prepare took 0ms - succeeded, sql="CREATE TABLE install_requests_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        9: [2020-10-16 01:36:11.004] executeForChangedRowCount took 1ms - succeeded, sql="CREATE TABLE install_requests (reason TEXT, pk TEXT PRIMARY KEY, state INTEGER, data BLOB, constraints TEXT)"
        10: [2020-10-16 01:36:11.003] prepare took 0ms - succeeded, sql="CREATE TABLE install_requests (reason TEXT, pk TEXT PRIMARY KEY, state INTEGER, data BLOB, constraints TEXT)"
        11: [2020-10-16 01:36:11.003] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        12: [2020-10-16 01:36:11.003] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        13: [2020-10-16 01:36:11.003] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        14: [2020-10-16 01:36:11.003] execute took 0ms - succeeded, sql="PRAGMA synchronous=FULL"
        15: [2020-10-16 01:36:11.003] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        16: [2020-10-16 01:36:11.000] executeForString took 3ms - succeeded, sql="PRAGMA journal_mode=TRUNCATE"
        17: [2020-10-16 01:36:11.000] executeForString took 0ms - succeeded, sql="PRAGMA journal_mode"
        18: [2020-10-16 01:36:11.000] execute took 0ms - succeeded, sql="COMMIT"
        19: [2020-10-16 01:36:11.000] execute took 0ms - succeeded, sql="REINDEX LOCALIZED"
        0: [2020-10-16 01:36:12.013] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM synced_entries_table"
        1: [2020-10-16 01:36:12.013] prepare took 0ms - succeeded, sql="DELETE FROM synced_entries_table"
        2: [2020-10-16 01:36:12.013] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM fetch_suggestions_queues_table"
        3: [2020-10-16 01:36:12.013] prepare took 0ms - succeeded, sql="DELETE FROM fetch_suggestions_queues_table"
        4: [2020-10-16 01:36:12.013] execute took 0ms - succeeded, sql="COMMIT;"
        5: [2020-10-16 01:36:12.013] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 2"
        6: [2020-10-16 01:36:12.013] prepare took 0ms - succeeded, sql="PRAGMA user_version = 2"
        7: [2020-10-16 01:36:12.013] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE synced_entries_table (fetch_suggestion_url TEXT NOT NULL, user_account_name TEXT NOT NULL, PRIMARY KEY(fetch_suggestion_url, user_account_name))"
        8: [2020-10-16 01:36:12.013] prepare took 0ms - succeeded, sql="CREATE TABLE synced_entries_table (fetch_suggestion_url TEXT NOT NULL, user_account_name TEXT NOT NULL, PRIMARY KEY(fetch_suggestion_url, user_account_name))"
        9: [2020-10-16 01:36:12.013] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE fetch_suggestions_queues_table (fetch_suggestion_url TEXT NOT NULL, user_account_name TEXT NOT NULL, enqueued_millis INTEGER NOT NULL, failed_attempts_count INTEGER NOT NULL, processing_start_millis INTEGER NOT NULL DEFAULT 0, queue_name TEXT NOT NULL, PRIMARY KEY(fetch_suggestion_url, user_account_name))"
        10: [2020-10-16 01:36:12.013] prepare took 0ms - succeeded, sql="CREATE TABLE fetch_suggestions_queues_table (fetch_suggestion_url TEXT NOT NULL, user_account_name TEXT NOT NULL, enqueued_millis INTEGER NOT NULL, failed_attempts_count INTEGER NOT NULL, processing_start_millis INTEGER NOT NULL DEFAULT 0, queue_name TEXT NOT NULL, PRIMARY KEY(fetch_suggestion_url, user_account_name))"
        11: [2020-10-16 01:36:12.013] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        12: [2020-10-16 01:36:12.013] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        13: [2020-10-16 01:36:12.013] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        14: [2020-10-16 01:36:12.013] execute took 0ms - succeeded, sql="COMMIT"
        15: [2020-10-16 01:36:12.013] execute took 0ms - succeeded, sql="REINDEX LOCALIZED"
        16: [2020-10-16 01:36:12.013] execute took 0ms - succeeded, sql="INSERT INTO android_metadata (locale) VALUES(?)"
        17: [2020-10-16 01:36:12.013] execute took 0ms - succeeded, sql="DELETE FROM android_metadata"
        18: [2020-10-16 01:36:12.013] execute took 0ms - succeeded, sql="BEGIN"
        19: [2020-10-16 01:36:12.012] executeForString took 1ms - succeeded, sql="SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1"
        0: [2020-10-16 01:36:10.780] executeForCursorWindow took 0ms - succeeded, sql="SELECT package_name, auto_update, desired_version, download_uri, delivery_data, delivery_data_timestamp_ms, installer_state, first_download_ms, referrer, account, title, flags, continue_url, last_notified_version, last_update_timestamp_ms, account_for_update, auto_acquire_tags, external_referrer_timestamp_ms, persistent_flags, permissions_version, delivery_token, completed_split_ids, active_split_id, request_id, managed_configuration_token, total_completed_bytes_downloaded, app_details, install_client_event_id, last_client_event_id, requesting_package_name, update_discovered_timestamp_ms, install_logging_context, logging_context, install_request_timestamp_ms, desired_derived_apk_id, notification_intent, auto_update_flow_policy, install_reason, sandbox_version, requested_modules, install_request_data, active_accelerator_index, update_discovered_version_code, desired_frosting_id, active_resource_id, active_resource_request_id FROM appstate"
        1: [2020-10-16 01:36:10.780] prepare took 0ms - succeeded, sql="SELECT package_name, auto_update, desired_version, download_uri, delivery_data, delivery_data_timestamp_ms, installer_state, first_download_ms, referrer, account, title, flags, continue_url, last_notified_version, last_update_timestamp_ms, account_for_update, auto_acquire_tags, external_referrer_timestamp_ms, persistent_flags, permissions_version, delivery_token, completed_split_ids, active_split_id, request_id, managed_configuration_token, total_completed_bytes_downloaded, app_details, install_client_event_id, last_client_event_id, requesting_package_name, update_discovered_timestamp_ms, install_logging_context, logging_context, install_request_timestamp_ms, desired_derived_apk_id, notification_intent, auto_update_flow_policy, install_reason, sandbox_version, requested_modules, install_request_data, active_accelerator_index, update_discovered_version_code, desired_frosting_id, active_resource_id, active_resource_request_id FROM appstate"
        2: [2020-10-16 01:36:10.780] execute took 0ms - succeeded, sql="COMMIT;"
        3: [2020-10-16 01:36:10.780] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 38"
        4: [2020-10-16 01:36:10.780] prepare took 0ms - succeeded, sql="PRAGMA user_version = 38"
        5: [2020-10-16 01:36:10.780] executeForChangedRowCount took 1ms - succeeded, sql="CREATE TABLE appstate (package_name STRING, auto_update INTEGER, desired_version INTEGER, download_uri STRING, delivery_data BLOB, delivery_data_timestamp_ms INTEGER,installer_state INTEGER, first_download_ms INTEGER, referrer STRING, account STRING, title STRING,flags INTEGER, continue_url STRING, last_notified_version INTEGER, last_update_timestamp_ms INTEGER, account_for_update STRING, auto_acquire_tags STRING, external_referrer_timestamp_ms INTEGER, persistent_flags INTEGER, permissions_version INTEGER, delivery_token STRING,completed_split_ids STRING, active_split_id STRING, request_id STRING,managed_configuration_token BLOB, total_completed_bytes_downloaded INTEGER,app_details BLOB, install_client_event_id INTEGER,last_client_event_id INTEGER, requesting_package_name STRING,update_discovered_timestamp_ms INTEGER, install_logging_context BLOB, logging_context BLOB, install_request_timestamp_ms INTEGER, desired_derived_apk_id INTEGER, notification_intent STRING, auto_update_flow_policy BLOB, install_reason STRING, sandbox_version INTEGER,requested_modules TEXT, install_request_data BLOB, active_accelerator_index INTEGER,update_discovered_version_code INTEGER, desired_frosting_id INTEGER,active_resource_id BLOB,active_resource_request_id BLOB,PRIMARY KEY (package_name))"
        6: [2020-10-16 01:36:10.779] prepare took 0ms - succeeded, sql="CREATE TABLE appstate (package_name STRING, auto_update INTEGER, desired_version INTEGER, download_uri STRING, delivery_data BLOB, delivery_data_timestamp_ms INTEGER,installer_state INTEGER, first_download_ms INTEGER, referrer STRING, account STRING, title STRING,flags INTEGER, continue_url STRING, last_notified_version INTEGER, last_update_timestamp_ms INTEGER, account_for_update STRING, auto_acquire_tags STRING, external_referrer_timestamp_ms INTEGER, persistent_flags INTEGER, permissions_version INTEGER, delivery_token STRING,completed_split_ids STRING, active_split_id STRING, request_id STRING,managed_configuration_token BLOB, total_completed_bytes_downloaded INTEGER,app_details BLOB, install_client_event_id INTEGER,last_client_event_id INTEGER, requesting_package_name STRING,update_discovered_timestamp_ms INTEGER, install_logging_context BLOB, logging_context BLOB, install_request_timestamp_ms INTEGER, desired_derived_apk_id INTEGER, notification_intent STRING, auto_update_flow_policy BLOB, install_reason STRING, sandbox_version INTEGER,requested_modules TEXT, install_request_data BLOB, active_accelerator_index INTEGER,update_discovered_version_code INTEGER, desired_frosting_id INTEGER,active_resource_id BLOB,active_resource_request_id BLOB,PRIMARY KEY (package_name))"
        7: [2020-10-16 01:36:10.779] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        8: [2020-10-16 01:36:10.779] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        9: [2020-10-16 01:36:10.779] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        10: [2020-10-16 01:36:10.779] execute took 0ms - succeeded, sql="COMMIT"
        11: [2020-10-16 01:36:10.779] execute took 0ms - succeeded, sql="REINDEX LOCALIZED"
        12: [2020-10-16 01:36:10.779] execute took 0ms - succeeded, sql="INSERT INTO android_metadata (locale) VALUES(?)"
        13: [2020-10-16 01:36:10.779] execute took 0ms - succeeded, sql="DELETE FROM android_metadata"
        14: [2020-10-16 01:36:10.779] execute took 0ms - succeeded, sql="BEGIN"
        15: [2020-10-16 01:36:10.779] executeForString took 0ms - succeeded, sql="SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1"
        16: [2020-10-16 01:36:10.778] execute took 1ms - succeeded, sql="CREATE TABLE IF NOT EXISTS android_metadata (locale TEXT)"
        17: [2020-10-16 01:36:10.778] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint=100"
        18: [2020-10-16 01:36:10.778] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint"
        19: [2020-10-16 01:36:10.778] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit=524288"
        0: [2020-10-16 01:36:47.151] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM downloaded_update_state WHERE 1=1"
        1: [2020-10-16 01:36:47.151] prepare took 0ms - succeeded, sql="SELECT data FROM downloaded_update_state WHERE 1=1"
        2: [2020-10-16 01:36:47.146] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM downloaded_update_state WHERE 1=1"
        3: [2020-10-16 01:36:47.145] prepare took 0ms - succeeded, sql="SELECT data FROM downloaded_update_state WHERE 1=1"
        4: [2020-10-16 01:36:47.143] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM downloaded_update_state WHERE 1=1"
        5: [2020-10-16 01:36:47.143] prepare took 0ms - succeeded, sql="SELECT data FROM downloaded_update_state WHERE 1=1"
        6: [2020-10-16 01:36:47.125] execute took 18ms - succeeded, sql="COMMIT;"
        7: [2020-10-16 01:36:47.125] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        8: [2020-10-16 01:36:47.125] prepare took 0ms - succeeded, sql="PRAGMA user_version = 1"
        9: [2020-10-16 01:36:47.125] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE downloaded_update_state_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        10: [2020-10-16 01:36:47.123] prepare took 1ms - succeeded, sql="CREATE TABLE downloaded_update_state_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        11: [2020-10-16 01:36:47.122] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE downloaded_update_state (data BLOB, pk TEXT PRIMARY KEY)"
        12: [2020-10-16 01:36:47.119] prepare took 4ms - succeeded, sql="CREATE TABLE downloaded_update_state (data BLOB, pk TEXT PRIMARY KEY)"
        13: [2020-10-16 01:36:47.118] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        14: [2020-10-16 01:36:47.118] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        15: [2020-10-16 01:36:47.118] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        16: [2020-10-16 01:36:47.118] execute took 0ms - succeeded, sql="PRAGMA synchronous=FULL"
        17: [2020-10-16 01:36:47.118] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        18: [2020-10-16 01:36:47.112] executeForString took 7ms - succeeded, sql="PRAGMA journal_mode=TRUNCATE"
        19: [2020-10-16 01:36:47.112] executeForString took 0ms - succeeded, sql="PRAGMA journal_mode"
        0: [2020-10-16 01:36:10.687] execute took 9ms - succeeded, sql="COMMIT;"
        1: [2020-10-16 01:36:10.671] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT OR REPLACE  INTO touch_timestamp(pk,data) VALUES (?,?)"
        2: [2020-10-16 01:36:10.671] prepare took 0ms - succeeded, sql="INSERT OR REPLACE  INTO touch_timestamp(pk,data) VALUES (?,?)"
        3: [2020-10-16 01:36:10.670] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        4: [2020-10-16 01:36:10.664] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM touch_timestamp WHERE 1=1"
        5: [2020-10-16 01:36:10.664] prepare took 0ms - succeeded, sql="SELECT data FROM touch_timestamp WHERE 1=1"
        6: [2020-10-16 01:36:10.650] execute took 9ms - succeeded, sql="COMMIT;"
        7: [2020-10-16 01:36:10.650] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        8: [2020-10-16 01:36:10.650] prepare took 0ms - succeeded, sql="PRAGMA user_version = 1"
        9: [2020-10-16 01:36:10.650] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE touch_timestamp_audit(data_table_pk INTEGER,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        10: [2020-10-16 01:36:10.650] prepare took 0ms - succeeded, sql="CREATE TABLE touch_timestamp_audit(data_table_pk INTEGER,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        11: [2020-10-16 01:36:10.650] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE touch_timestamp (data BLOB, pk INTEGER PRIMARY KEY)"
        12: [2020-10-16 01:36:10.650] prepare took 0ms - succeeded, sql="CREATE TABLE touch_timestamp (data BLOB, pk INTEGER PRIMARY KEY)"
        13: [2020-10-16 01:36:10.650] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE my_apps_update_clicks_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        14: [2020-10-16 01:36:10.650] prepare took 0ms - succeeded, sql="CREATE TABLE my_apps_update_clicks_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        15: [2020-10-16 01:36:10.650] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE my_apps_update_clicks (pk TEXT PRIMARY KEY, update_button_type INTEGER, click_timestamp INTEGER, data BLOB)"
        16: [2020-10-16 01:36:10.650] prepare took 0ms - succeeded, sql="CREATE TABLE my_apps_update_clicks (pk TEXT PRIMARY KEY, update_button_type INTEGER, click_timestamp INTEGER, data BLOB)"
        17: [2020-10-16 01:36:10.649] executeForChangedRowCount took 1ms - succeeded, sql="CREATE TABLE notification_clicks_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        18: [2020-10-16 01:36:10.649] prepare took 0ms - succeeded, sql="CREATE TABLE notification_clicks_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        19: [2020-10-16 01:36:10.649] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE notification_clicks (notification_type INTEGER, click_type INTEGER, pk TEXT PRIMARY KEY, click_timestamp INTEGER, data BLOB)"
        0: [2020-10-16 01:36:52.783] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,108, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 108 AND day = "2020-10-15")))"
        1: [2020-10-16 01:36:52.783] prepare took 1ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,108, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 108 AND day = "2020-10-15")))"
        2: [2020-10-16 01:36:51.649] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,550, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 550 AND day = "2020-10-15")))"
        3: [2020-10-16 01:36:51.649] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,550, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 550 AND day = "2020-10-15")))"
        4: [2020-10-16 01:36:51.647] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,545, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 545 AND day = "2020-10-15")))"
        5: [2020-10-16 01:36:51.647] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,545, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 545 AND day = "2020-10-15")))"
        6: [2020-10-16 01:36:51.644] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,544, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 544 AND day = "2020-10-15")))"
        7: [2020-10-16 01:36:51.644] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,544, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 544 AND day = "2020-10-15")))"
        8: [2020-10-16 01:36:51.632] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,550, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 550 AND day = "2020-10-15")))"
        9: [2020-10-16 01:36:51.632] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,550, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 550 AND day = "2020-10-15")))"
        10: [2020-10-16 01:36:51.627] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,545, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 545 AND day = "2020-10-15")))"
        11: [2020-10-16 01:36:51.627] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,545, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 545 AND day = "2020-10-15")))"
        12: [2020-10-16 01:36:51.614] executeForChangedRowCount took 1ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,544, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 544 AND day = "2020-10-15")))"
        13: [2020-10-16 01:36:51.614] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,544, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 544 AND day = "2020-10-15")))"
        14: [2020-10-16 01:36:51.587] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,548, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 548 AND day = "2020-10-15")))"
        15: [2020-10-16 01:36:51.587] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,162, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 162 AND day = "2020-10-15")))"
        16: [2020-10-16 01:36:51.586] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,548, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 548 AND day = "2020-10-15")))"
        17: [2020-10-16 01:36:51.585] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,162, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 162 AND day = "2020-10-15")))"
        18: [2020-10-16 01:36:51.581] executeForChangedRowCount took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,548, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 548 AND day = "2020-10-15")))"
        19: [2020-10-16 01:36:51.581] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO counters VALUES ( "2020-10-15" ,548, (SELECT COALESCE(MAX(counter_value + 1), 1) FROM counters WHERE (counter_type = 548 AND day = "2020-10-15")))"
        0: [2020-10-16 01:36:51.268] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM app_data_usage WHERE 1=1 AND date >= (?) AND date <= (?) AND data_usage_type in (?)"
        1: [2020-10-16 01:36:51.268] prepare took 1ms - succeeded, sql="SELECT data FROM app_data_usage WHERE 1=1 AND date >= (?) AND date <= (?) AND data_usage_type in (?)"
        2: [2020-10-16 01:36:47.169] execute took 0ms - succeeded, sql="ROLLBACK;"
        3: [2020-10-16 01:36:47.168] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM app_data_usage WHERE 1=1 AND date <= (?)"
        4: [2020-10-16 01:36:47.168] prepare took 0ms - succeeded, sql="SELECT data FROM app_data_usage WHERE 1=1 AND date <= (?)"
        5: [2020-10-16 01:36:47.168] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        6: [2020-10-16 01:36:47.164] executeForCursorWindow took 1ms - succeeded, sql="SELECT data FROM app_data_usage WHERE 1=1 AND data_usage_type in (?) ORDER BY date DESC LIMIT 1"
        7: [2020-10-16 01:36:47.164] prepare took 0ms - succeeded, sql="SELECT data FROM app_data_usage WHERE 1=1 AND data_usage_type in (?) ORDER BY date DESC LIMIT 1"
        8: [2020-10-16 01:36:47.156] execute took 8ms - succeeded, sql="COMMIT;"
        9: [2020-10-16 01:36:47.156] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        10: [2020-10-16 01:36:47.156] prepare took 0ms - succeeded, sql="PRAGMA user_version = 1"
        11: [2020-10-16 01:36:47.156] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE app_data_usage_audit(data_table_pk INTEGER,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        12: [2020-10-16 01:36:47.156] prepare took 0ms - succeeded, sql="CREATE TABLE app_data_usage_audit(data_table_pk INTEGER,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        13: [2020-10-16 01:36:47.155] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE app_data_usage (date INTEGER, roaming_state INTEGER, data BLOB, connection_type INTEGER, data_usage_type INTEGER, package_name TEXT, pk INTEGER PRIMARY KEY, foreground_state INTEGER, metered_state INTEGER)"
        14: [2020-10-16 01:36:47.155] prepare took 0ms - succeeded, sql="CREATE TABLE app_data_usage (date INTEGER, roaming_state INTEGER, data BLOB, connection_type INTEGER, data_usage_type INTEGER, package_name TEXT, pk INTEGER PRIMARY KEY, foreground_state INTEGER, metered_state INTEGER)"
        15: [2020-10-16 01:36:47.155] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        16: [2020-10-16 01:36:47.155] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        17: [2020-10-16 01:36:47.155] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        18: [2020-10-16 01:36:47.155] execute took 0ms - succeeded, sql="PRAGMA synchronous=FULL"
        19: [2020-10-16 01:36:47.155] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        0: [2020-10-16 01:36:10.601] executeForCursorWindow took 0ms - succeeded, sql="SELECT account, library_id, backend, doc_id, doc_type, offer_type, document_hash, subs_valid_until_time, app_certificate_hash, app_refund_pre_delivery_endtime_ms, app_refund_post_delivery_window_ms, subs_auto_renewing, subs_initiation_time, subs_trial_until_time, inapp_purchase_data, inapp_signature, preordered, owned_via_license, shared_by_me, sharer_gaia_id, shareability, purchase_time, subscription_library_state, licensing_data FROM ownership"
        1: [2020-10-16 01:36:10.596] prepare took 0ms - succeeded, sql="SELECT account, library_id, backend, doc_id, doc_type, offer_type, document_hash, subs_valid_until_time, app_certificate_hash, app_refund_pre_delivery_endtime_ms, app_refund_post_delivery_window_ms, subs_auto_renewing, subs_initiation_time, subs_trial_until_time, inapp_purchase_data, inapp_signature, preordered, owned_via_license, shared_by_me, sharer_gaia_id, shareability, purchase_time, subscription_library_state, licensing_data FROM ownership"
        2: [2020-10-16 01:36:10.596] execute took 0ms - succeeded, sql="COMMIT;"
        3: [2020-10-16 01:36:10.596] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 14"
        4: [2020-10-16 01:36:10.596] prepare took 0ms - succeeded, sql="PRAGMA user_version = 14"
        5: [2020-10-16 01:36:10.595] executeForChangedRowCount took 2ms - succeeded, sql="CREATE TABLE ownership (account STRING, library_id STRING, backend INTEGER, doc_id STRING, doc_type INTEGER, offer_type INTEGER, document_hash INTEGER, subs_valid_until_time INTEGER, app_certificate_hash STRING, app_refund_pre_delivery_endtime_ms INTEGER, app_refund_post_delivery_window_ms INTEGER, subs_auto_renewing INTEGER, subs_initiation_time INTEGER, subs_trial_until_time INTEGER, inapp_purchase_data STRING, inapp_signature STRING, preordered INTEGER, owned_via_license INTEGER, shared_by_me INTEGER, sharer_gaia_id TEXT, shareability INTEGER, purchase_time INTEGER, subscription_library_state INTEGER, licensing_data TEXT, PRIMARY KEY (account, library_id, backend, doc_id, doc_type, offer_type))"
        6: [2020-10-16 01:36:10.594] prepare took 0ms - succeeded, sql="CREATE TABLE ownership (account STRING, library_id STRING, backend INTEGER, doc_id STRING, doc_type INTEGER, offer_type INTEGER, document_hash INTEGER, subs_valid_until_time INTEGER, app_certificate_hash STRING, app_refund_pre_delivery_endtime_ms INTEGER, app_refund_post_delivery_window_ms INTEGER, subs_auto_renewing INTEGER, subs_initiation_time INTEGER, subs_trial_until_time INTEGER, inapp_purchase_data STRING, inapp_signature STRING, preordered INTEGER, owned_via_license INTEGER, shared_by_me INTEGER, sharer_gaia_id TEXT, shareability INTEGER, purchase_time INTEGER, subscription_library_state INTEGER, licensing_data TEXT, PRIMARY KEY (account, library_id, backend, doc_id, doc_type, offer_type))"
        7: [2020-10-16 01:36:10.594] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        8: [2020-10-16 01:36:10.594] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        9: [2020-10-16 01:36:10.594] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        10: [2020-10-16 01:36:10.594] execute took 0ms - succeeded, sql="COMMIT"
        11: [2020-10-16 01:36:10.594] execute took 0ms - succeeded, sql="REINDEX LOCALIZED"
        12: [2020-10-16 01:36:10.594] execute took 0ms - succeeded, sql="INSERT INTO android_metadata (locale) VALUES(?)"
        13: [2020-10-16 01:36:10.594] execute took 0ms - succeeded, sql="DELETE FROM android_metadata"
        14: [2020-10-16 01:36:10.594] execute took 0ms - succeeded, sql="BEGIN"
        15: [2020-10-16 01:36:10.594] executeForString took 0ms - succeeded, sql="SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1"
        16: [2020-10-16 01:36:10.580] execute took 14ms - succeeded, sql="CREATE TABLE IF NOT EXISTS android_metadata (locale TEXT)"
        17: [2020-10-16 01:36:10.580] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint=100"
        18: [2020-10-16 01:36:10.580] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint"
        19: [2020-10-16 01:36:10.580] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit=524288"
        0: [2020-10-16 01:36:52.011] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_language_per_app WHERE 1=1"
        1: [2020-10-16 01:36:52.011] prepare took 0ms - succeeded, sql="SELECT data FROM split_language_per_app WHERE 1=1"
        2: [2020-10-16 01:36:52.010] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1"
        3: [2020-10-16 01:36:52.010] prepare took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1"
        4: [2020-10-16 01:36:47.060] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_install_sessions WHERE 1=1"
        5: [2020-10-16 01:36:47.060] prepare took 0ms - succeeded, sql="SELECT data FROM split_install_sessions WHERE 1=1"
        6: [2020-10-16 01:36:47.057] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        7: [2020-10-16 01:36:47.057] prepare took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        8: [2020-10-16 01:36:47.056] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        9: [2020-10-16 01:36:47.056] prepare took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        10: [2020-10-16 01:36:47.055] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        11: [2020-10-16 01:36:47.055] prepare took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        12: [2020-10-16 01:36:47.055] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        13: [2020-10-16 01:36:47.054] prepare took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        14: [2020-10-16 01:36:47.050] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        15: [2020-10-16 01:36:47.050] prepare took 0ms - succeeded, sql="SELECT data FROM split_removal_markers WHERE 1=1 AND split_marker_type = (?)"
        16: [2020-10-16 01:36:47.049] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_install_sessions WHERE 1=1 AND creation_timestamp > (?)"
        17: [2020-10-16 01:36:47.049] prepare took 0ms - succeeded, sql="SELECT data FROM split_install_sessions WHERE 1=1 AND creation_timestamp > (?)"
        18: [2020-10-16 01:36:47.048] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM split_install_sessions WHERE 1=1 AND creation_timestamp > (?)"
        19: [2020-10-16 01:36:47.048] prepare took 0ms - succeeded, sql="SELECT data FROM split_install_sessions WHERE 1=1 AND creation_timestamp > (?)"
        0: [2020-10-16 01:36:12.024] execute took 0ms - succeeded, sql="ROLLBACK;"
        1: [2020-10-16 01:36:12.024] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM prefetch_recommendations WHERE 1=1"
        2: [2020-10-16 01:36:12.024] prepare took 0ms - succeeded, sql="SELECT data FROM prefetch_recommendations WHERE 1=1"
        3: [2020-10-16 01:36:12.024] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        4: [2020-10-16 01:36:10.761] execute took 0ms - succeeded, sql="ROLLBACK;"
        5: [2020-10-16 01:36:10.761] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM prefetch_recommendations WHERE 1=1"
        6: [2020-10-16 01:36:10.760] prepare took 0ms - succeeded, sql="SELECT data FROM prefetch_recommendations WHERE 1=1"
        7: [2020-10-16 01:36:10.760] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        8: [2020-10-16 01:36:10.754] execute took 6ms - succeeded, sql="COMMIT;"
        9: [2020-10-16 01:36:10.754] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 3"
        10: [2020-10-16 01:36:10.754] prepare took 0ms - succeeded, sql="PRAGMA user_version = 3"
        11: [2020-10-16 01:36:10.754] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE prefetch_recommendations_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        12: [2020-10-16 01:36:10.754] prepare took 0ms - succeeded, sql="CREATE TABLE prefetch_recommendations_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        13: [2020-10-16 01:36:10.754] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE prefetch_recommendations (data BLOB, batch_id INTEGER, total_attempts_made INTEGER, last_success_timestamp INTEGER, account_name TEXT, expiration_timestamp INTEGER, pk TEXT PRIMARY KEY, is_persistable_through_refresh INTEGER)"
        14: [2020-10-16 01:36:10.754] prepare took 0ms - succeeded, sql="CREATE TABLE prefetch_recommendations (data BLOB, batch_id INTEGER, total_attempts_made INTEGER, last_success_timestamp INTEGER, account_name TEXT, expiration_timestamp INTEGER, pk TEXT PRIMARY KEY, is_persistable_through_refresh INTEGER)"
        15: [2020-10-16 01:36:10.754] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        16: [2020-10-16 01:36:10.754] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        17: [2020-10-16 01:36:10.754] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        18: [2020-10-16 01:36:10.754] execute took 1ms - succeeded, sql="PRAGMA synchronous=FULL"
        19: [2020-10-16 01:36:10.753] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        0: [2020-10-16 01:36:52.012] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1"
        1: [2020-10-16 01:36:52.011] prepare took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1"
        2: [2020-10-16 01:36:47.274] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1"
        3: [2020-10-16 01:36:47.274] prepare took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1"
        4: [2020-10-16 01:36:47.272] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1 AND creation_timestamp > (?)"
        5: [2020-10-16 01:36:47.272] prepare took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1 AND creation_timestamp > (?)"
        6: [2020-10-16 01:36:47.257] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1"
        7: [2020-10-16 01:36:47.257] prepare took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1"
        8: [2020-10-16 01:36:47.244] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1"
        9: [2020-10-16 01:36:47.244] prepare took 0ms - succeeded, sql="SELECT data FROM asset_modules_sessions WHERE 1=1"
        10: [2020-10-16 01:36:47.212] execute took 32ms - succeeded, sql="COMMIT;"
        11: [2020-10-16 01:36:47.212] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        12: [2020-10-16 01:36:47.212] prepare took 0ms - succeeded, sql="PRAGMA user_version = 1"
        13: [2020-10-16 01:36:47.212] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE asset_modules_sessions_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        14: [2020-10-16 01:36:47.212] prepare took 0ms - succeeded, sql="CREATE TABLE asset_modules_sessions_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        15: [2020-10-16 01:36:47.212] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE asset_modules_sessions (package_name TEXT, pk TEXT PRIMARY KEY, data BLOB, creation_timestamp INTEGER)"
        16: [2020-10-16 01:36:47.212] prepare took 0ms - succeeded, sql="CREATE TABLE asset_modules_sessions (package_name TEXT, pk TEXT PRIMARY KEY, data BLOB, creation_timestamp INTEGER)"
        17: [2020-10-16 01:36:47.212] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        18: [2020-10-16 01:36:47.212] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        19: [2020-10-16 01:36:47.212] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        0: [2020-10-16 01:36:11.028] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM group_installs WHERE 1=1"
        1: [2020-10-16 01:36:11.028] prepare took 0ms - succeeded, sql="SELECT data FROM group_installs WHERE 1=1"
        2: [2020-10-16 01:36:11.025] execute took 3ms - succeeded, sql="COMMIT;"
        3: [2020-10-16 01:36:11.025] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 2"
        4: [2020-10-16 01:36:11.025] prepare took 0ms - succeeded, sql="PRAGMA user_version = 2"
        5: [2020-10-16 01:36:11.025] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE group_installs_audit(data_table_pk INTEGER,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        6: [2020-10-16 01:36:11.025] prepare took 0ms - succeeded, sql="CREATE TABLE group_installs_audit(data_table_pk INTEGER,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        7: [2020-10-16 01:36:11.025] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE group_installs (data BLOB, group_name TEXT, session_key TEXT, pk INTEGER PRIMARY KEY, id INTEGER, group_type INTEGER, status INTEGER)"
        8: [2020-10-16 01:36:11.025] prepare took 0ms - succeeded, sql="CREATE TABLE group_installs (data BLOB, group_name TEXT, session_key TEXT, pk INTEGER PRIMARY KEY, id INTEGER, group_type INTEGER, status INTEGER)"
        9: [2020-10-16 01:36:11.025] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        10: [2020-10-16 01:36:11.025] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        11: [2020-10-16 01:36:11.025] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        12: [2020-10-16 01:36:11.025] execute took 0ms - succeeded, sql="PRAGMA synchronous=FULL"
        13: [2020-10-16 01:36:11.025] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        14: [2020-10-16 01:36:11.023] executeForString took 2ms - succeeded, sql="PRAGMA journal_mode=TRUNCATE"
        15: [2020-10-16 01:36:11.023] executeForString took 0ms - succeeded, sql="PRAGMA journal_mode"
        16: [2020-10-16 01:36:11.023] execute took 0ms - succeeded, sql="COMMIT"
        17: [2020-10-16 01:36:11.023] execute took 0ms - succeeded, sql="REINDEX LOCALIZED"
        18: [2020-10-16 01:36:11.023] execute took 0ms - succeeded, sql="INSERT INTO android_metadata (locale) VALUES(?)"
        19: [2020-10-16 01:36:11.023] execute took 0ms - succeeded, sql="DELETE FROM android_metadata"
        0: [2020-10-16 01:36:52.689] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM package_verdict_cache WHERE 1=1"
        1: [2020-10-16 01:36:52.689] prepare took 0ms - succeeded, sql="SELECT data FROM package_verdict_cache WHERE 1=1"
        2: [2020-10-16 01:36:52.687] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM client_verdict_cache WHERE 1=1"
        3: [2020-10-16 01:36:52.687] prepare took 0ms - succeeded, sql="SELECT data FROM client_verdict_cache WHERE 1=1"
        4: [2020-10-16 01:36:52.686] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM package_verdict_cache WHERE 1=1"
        5: [2020-10-16 01:36:52.686] prepare took 0ms - succeeded, sql="SELECT data FROM package_verdict_cache WHERE 1=1"
        6: [2020-10-16 01:36:52.685] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM package_uninstallations WHERE 1=1"
        7: [2020-10-16 01:36:52.685] prepare took 0ms - succeeded, sql="SELECT data FROM package_uninstallations WHERE 1=1"
        8: [2020-10-16 01:36:52.683] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM installation_attempts WHERE 1=1 ORDER BY sha256"
        9: [2020-10-16 01:36:52.683] prepare took 0ms - succeeded, sql="SELECT data FROM installation_attempts WHERE 1=1 ORDER BY sha256"
        10: [2020-10-16 01:36:52.663] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM package_installation_state WHERE 1=1"
        11: [2020-10-16 01:36:52.663] prepare took 0ms - succeeded, sql="SELECT data FROM package_installation_state WHERE 1=1"
        12: [2020-10-16 01:36:52.658] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM apk_info WHERE 1=1"
        13: [2020-10-16 01:36:52.655] prepare took 3ms - succeeded, sql="SELECT data FROM apk_info WHERE 1=1"
        14: [2020-10-16 01:36:52.650] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM package_installation_state WHERE 1=1 AND pk = (?)"
        15: [2020-10-16 01:36:52.649] prepare took 0ms - succeeded, sql="SELECT data FROM package_installation_state WHERE 1=1 AND pk = (?)"
        16: [2020-10-16 01:36:52.648] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM package_installation_state WHERE 1=1 AND pk = (?)"
        17: [2020-10-16 01:36:52.648] prepare took 0ms - succeeded, sql="SELECT data FROM package_installation_state WHERE 1=1 AND pk = (?)"
        18: [2020-10-16 01:36:52.647] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM package_installation_state WHERE 1=1 AND pk = (?)"
        19: [2020-10-16 01:36:52.646] prepare took 0ms - succeeded, sql="SELECT data FROM package_installation_state WHERE 1=1 AND pk = (?)"
        0: [2020-10-16 01:37:26.655] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM external_referrer_status_store WHERE 1=1 AND pk = (?)"
        1: [2020-10-16 01:37:26.655] prepare took 0ms - succeeded, sql="SELECT data FROM external_referrer_status_store WHERE 1=1 AND pk = (?)"
        2: [2020-10-16 01:37:26.651] execute took 3ms - succeeded, sql="COMMIT;"
        3: [2020-10-16 01:37:26.651] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        4: [2020-10-16 01:37:26.651] prepare took 0ms - succeeded, sql="PRAGMA user_version = 1"
        5: [2020-10-16 01:37:26.651] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE external_referrer_status_store_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        6: [2020-10-16 01:37:26.651] prepare took 0ms - succeeded, sql="CREATE TABLE external_referrer_status_store_audit(data_table_pk TEXT,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        7: [2020-10-16 01:37:26.651] executeForChangedRowCount took 1ms - succeeded, sql="CREATE TABLE external_referrer_status_store (data BLOB, pk TEXT PRIMARY KEY)"
        8: [2020-10-16 01:37:26.651] prepare took 0ms - succeeded, sql="CREATE TABLE external_referrer_status_store (data BLOB, pk TEXT PRIMARY KEY)"
        9: [2020-10-16 01:37:26.651] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        10: [2020-10-16 01:37:26.651] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        11: [2020-10-16 01:37:26.651] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        12: [2020-10-16 01:37:26.651] execute took 0ms - succeeded, sql="PRAGMA synchronous=FULL"
        13: [2020-10-16 01:37:26.651] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        14: [2020-10-16 01:37:26.648] executeForString took 3ms - succeeded, sql="PRAGMA journal_mode=TRUNCATE"
        15: [2020-10-16 01:37:26.648] executeForString took 0ms - succeeded, sql="PRAGMA journal_mode"
        16: [2020-10-16 01:37:26.647] execute took 0ms - succeeded, sql="COMMIT"
        17: [2020-10-16 01:37:26.647] execute took 0ms - succeeded, sql="REINDEX LOCALIZED"
        18: [2020-10-16 01:37:26.647] execute took 0ms - succeeded, sql="INSERT INTO android_metadata (locale) VALUES(?)"
        19: [2020-10-16 01:37:26.647] execute took 0ms - succeeded, sql="DELETE FROM android_metadata"
        0: [2020-10-16 01:36:47.944] executeForCursorWindow took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        1: [2020-10-16 01:36:47.944] prepare took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        2: [2020-10-16 01:36:47.942] execute took 0ms - succeeded, sql="ROLLBACK;"
        3: [2020-10-16 01:36:47.942] executeForCursorWindow took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        4: [2020-10-16 01:36:47.942] prepare took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        5: [2020-10-16 01:36:47.942] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        6: [2020-10-16 01:36:47.932] executeForCursorWindow took 0ms - succeeded, sql="SELECT [postals_data_id_seqno_table_appdatasearch].[seqno] AS seqno, CASE WHEN [postals_data_id_seqno_table_appdatasearch].[action_type] = '0' AND [postals].[data_id] IS NOT NULL THEN 'add' ELSE 'del' END AS action,[postals_data_id_seqno_table_appdatasearch].[uri] AS uri,score AS doc_score,0 AS created_timestamp,[postals].[label] AS section_label,[postals].[postal] AS section_data,[postals].[contact_id] AS section_contact_id,[postals].[type] AS section_type FROM (SELECT * FROM [postals_data_id_seqno_table_appdatasearch] WHERE [postals_data_id_seqno_table_appdatasearch].[tag] IS NULL) AS postals_data_id_seqno_table_appdatasearch LEFT OUTER JOIN [postals] ON [postals_data_id_seqno_table_appdatasearch].[uri] = [postals].[data_id] WHERE [postals_data_id_seqno_table_appdatasearch].[seqno] > 0 ORDER BY [postals_data_id_seqno_table_appdatasearch].[seqno] LIMIT 20"
        7: [2020-10-16 01:36:47.932] executeForCursorWindow took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        8: [2020-10-16 01:36:47.932] prepare took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        9: [2020-10-16 01:36:47.932] prepare took 1ms - succeeded, sql="SELECT [postals_data_id_seqno_table_appdatasearch].[seqno] AS seqno, CASE WHEN [postals_data_id_seqno_table_appdatasearch].[action_type] = '0' AND [postals].[data_id] IS NOT NULL THEN 'add' ELSE 'del' END AS action,[postals_data_id_seqno_table_appdatasearch].[uri] AS uri,score AS doc_score,0 AS created_timestamp,[postals].[label] AS section_label,[postals].[postal] AS section_data,[postals].[contact_id] AS section_contact_id,[postals].[type] AS section_type FROM (SELECT * FROM [postals_data_id_seqno_table_appdatasearch] WHERE [postals_data_id_seqno_table_appdatasearch].[tag] IS NULL) AS postals_data_id_seqno_table_appdatasearch LEFT OUTER JOIN [postals] ON [postals_data_id_seqno_table_appdatasearch].[uri] = [postals].[data_id] WHERE [postals_data_id_seqno_table_appdatasearch].[seqno] > 0 ORDER BY [postals_data_id_seqno_table_appdatasearch].[seqno] LIMIT 20"
        10: [2020-10-16 01:36:47.932] execute took 0ms - succeeded, sql="ROLLBACK;"
        11: [2020-10-16 01:36:47.927] executeForCursorWindow took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        12: [2020-10-16 01:36:47.927] prepare took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        13: [2020-10-16 01:36:47.927] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        14: [2020-10-16 01:36:47.918] executeForCursorWindow took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        15: [2020-10-16 01:36:47.918] prepare took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        16: [2020-10-16 01:36:47.918] execute took 0ms - succeeded, sql="ROLLBACK;"
        17: [2020-10-16 01:36:47.918] executeForCursorWindow took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        18: [2020-10-16 01:36:47.918] prepare took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        19: [2020-10-16 01:36:47.918] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        0: [2020-10-16 01:36:50.306] executeForCursorWindow took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE ((reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ()))"
        1: [2020-10-16 01:36:50.306] prepare took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE ((reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ()))"
        2: [2020-10-16 01:36:50.306] prepare took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE (reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ())"
        3: [2020-10-16 01:36:48.824] executeForCursorWindow took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE ((reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ()))"
        4: [2020-10-16 01:36:48.824] prepare took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE ((reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ()))"
        5: [2020-10-16 01:36:48.823] prepare took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE (reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ())"
        6: [2020-10-16 01:36:48.360] executeForCursorWindow took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE ((reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ()))"
        7: [2020-10-16 01:36:48.359] prepare took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE ((reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ()))"
        8: [2020-10-16 01:36:48.359] prepare took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE (reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ())"
        9: [2020-10-16 01:36:46.592] executeForCursorWindow took 0ms - succeeded, sql="SELECT reminders._id, reminders.due_date_millis FROM reminders WHERE ((due_date_millis>=? AND due_date_millis<? AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12)))"
        10: [2020-10-16 01:36:46.591] prepare took 0ms - succeeded, sql="SELECT reminders._id, reminders.due_date_millis FROM reminders WHERE ((due_date_millis>=? AND due_date_millis<? AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12)))"
        11: [2020-10-16 01:36:46.591] prepare took 0ms - succeeded, sql="SELECT reminders._id, reminders.due_date_millis FROM reminders WHERE (due_date_millis>=? AND due_date_millis<? AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12))"
        12: [2020-10-16 01:36:46.591] executeForCursorWindow took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE ((reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ()))"
        13: [2020-10-16 01:36:46.590] prepare took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE ((reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ()))"
        14: [2020-10-16 01:36:46.590] prepare took 0ms - succeeded, sql="SELECT reminders.recurrence_every, reminders.snoozed_time_millis, reminders.recurrence_end_minute, reminders.recurrence_start_second, reminders.server_assigned_id, reminders.link_id, reminders.location_fprint, reminders.recurrence_start_unspecified_future_time, reminders.monthly_pattern_week_day_number, reminders.experiment, reminders.recurrence_end_auto_renew, reminders.recurrence_end_auto_renew_until_unspecified_future_time, reminders.recurrence_end_hour, reminders.recurrence_end_auto_renew_until_minute, reminders.recurrence_end_auto_renew_until_absolute_time_ms, reminders.address_street_name, reminders.lng, reminders.recurrence_end_auto_renew_until_all_day, reminders.monthly_pattern_month_day, reminders.event_date_year, reminders.recurrence_end_auto_renew_until_hour, reminders.due_date_date_range, reminders.recurrence_end_month, reminders.due_date_millis, reminders.extensions, reminders.due_date_all_day, reminders.location_cell_id, reminders.address_locality, reminders.due_date_second, reminders.chain_id_cell_id, reminders.yearly_pattern_year_month, reminders.event_date_unspecified_future_time, reminders.address_name, reminders.snoozed, reminders.chain_id_fprint, reminders.archived, reminders.category_id, reminders.client_assigned_id, reminders.recurrence_end_period, reminders.event_date_day, reminders.chain_name, reminders.recurrence_end_auto_renew_until_month, reminders.due_date_day, reminders.location_query_type, reminders.recurrence_start_date_range, reminders.address_postal_code, reminders.display_address, reminders.yearly_pattern_monthly_pattern_week_day_number, reminders.yearly_pattern_monthly_pattern_week_day, reminders.location_type, reminders.recurrence_end_absolute_time_ms, reminders.created_time_millis, reminders.account_id, reminders.deleted, reminders.daily_pattern_all_day, reminders.recurrence_end_date_range, reminders.event_date_minute, reminders.recurrence_end_day, reminders.recurrence_start_period, reminders.due_date_unspecified_future_time, reminders.location_query, reminders.recurrence_start_absolute_time_ms, reminders.address_region, reminders.radius_meters, reminders.event_date_absolute_time_ms, reminders.daily_pattern_minute, reminders.lat, reminders.due_date_month, reminders.due_date_absolute_time_ms, reminders.recurrence_master, reminders.due_date_period, reminders.link_application, reminders.due_date_year, reminders.event_date_all_day, reminders.recurrence_end_year, reminders.recurrence_end_second, reminders.recurrence_end_auto_renew_until_year, reminders.event_date_hour, reminders.display_name, reminders.address_street_address, reminders.dirty_sync_bit, reminders.recurrence_end_num_occurrences, reminders.due_date_hour, reminders.recurrence_start_year, reminders.name, reminders.recurrence_end_auto_renew_until_second, reminders._id, reminders.monthly_pattern_week_day, reminders.daily_pattern_hour, reminders.recurrence_end_unspecified_future_time, reminders.pinned, reminders.recurrence_start_hour, reminders.recurrence_start_all_day, reminders.title, reminders.recurrence_end_auto_renew_until_day, reminders.assistance, reminders.weekly_pattern_weekday, reminders.archived_time_ms, reminders.daily_pattern_period, reminders.event_date_month, reminders.yearly_pattern_monthly_pattern_month_day, reminders.event_date_second, reminders.recurrence_id, reminders.place_types, reminders.task_list, reminders.recurrence_start_month, reminders.recurrence_frequency, reminders.client_assigned_thread_id, reminders.fired_time_millis, reminders.recurrence_exceptional, reminders.address_street_number, reminders.due_date_minute, reminders.location_alias_id, reminders.address_country, reminders.location_snoozed_until_ms, reminders.recurrence_start_day, reminders.recurrence_start_minute, reminders.event_date_date_range, reminders.recurrence_end_all_day, reminders.event_date_period, reminders.recurrence_end_auto_renew_until_date_range, reminders.recurrence_end_auto_renew_until_period, reminders.daily_pattern_second, reminders.reminder_type FROM reminders WHERE (reminder_type=2 AND snoozed == 1 AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12) AND task_list IN ())"
        15: [2020-10-16 01:36:45.044] executeForCursorWindow took 0ms - succeeded, sql="SELECT reminders._id, reminders.due_date_millis FROM reminders WHERE ((due_date_millis>=? AND due_date_millis<? AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12)))"
        16: [2020-10-16 01:36:45.044] prepare took 0ms - succeeded, sql="SELECT reminders._id, reminders.due_date_millis FROM reminders WHERE ((due_date_millis>=? AND due_date_millis<? AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12)))"
        17: [2020-10-16 01:36:45.044] prepare took 0ms - succeeded, sql="SELECT reminders._id, reminders.due_date_millis FROM reminders WHERE (due_date_millis>=? AND due_date_millis<? AND archived != 1 AND deleted != 1 AND (recurrence_master IS NULL OR recurrence_master=0) AND task_list IN (16,4,3,5,7,13,14,12))"
        18: [2020-10-16 01:36:12.437] executeForCursorWindow took 0ms - succeeded, sql="SELECT account._id, account.account_name, account.storage_version, account.sync_status, account.account_state FROM account"
        19: [2020-10-16 01:36:12.437] prepare took 0ms - succeeded, sql="SELECT account._id, account.account_name, account.storage_version, account.sync_status, account.account_state FROM account"
        0: [2020-10-16 01:40:13.200] executeForCursorWindow took 0ms - succeeded, sql="select app_id from queue order by has_realtime desc, rowid asc limit 1;"
        1: [2020-10-16 01:40:13.200] prepare took 0ms - succeeded, sql="select app_id from queue order by has_realtime desc, rowid asc limit 1;"
        2: [2020-10-16 01:40:13.200] executeForCursorWindow took 0ms - succeeded, sql="select count(1) > 0 from raw_events"
        3: [2020-10-16 01:40:13.200] prepare took 0ms - succeeded, sql="select count(1) > 0 from raw_events"
        4: [2020-10-16 01:40:13.199] executeForCursorWindow took 0ms - succeeded, sql="select app_id from queue order by has_realtime desc, rowid asc limit 1;"
        5: [2020-10-16 01:40:13.199] prepare took 0ms - succeeded, sql="select app_id from queue order by has_realtime desc, rowid asc limit 1;"
        6: [2020-10-16 01:40:13.199] executeForCursorWindow took 0ms - succeeded, sql="select count(1) > 0 from raw_events"
        7: [2020-10-16 01:40:13.199] prepare took 0ms - succeeded, sql="select count(1) > 0 from raw_events"
        8: [2020-10-16 01:40:13.197] execute took 0ms - succeeded, sql="COMMIT;"
        9: [2020-10-16 01:40:13.197] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM queue WHERE rowid=?"
        10: [2020-10-16 01:40:13.197] prepare took 0ms - succeeded, sql="DELETE FROM queue WHERE rowid=?"
        11: [2020-10-16 01:40:13.196] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        12: [2020-10-16 01:40:13.184] executeForCursorWindow took 0ms - succeeded, sql="select max(timestamp) from raw_events"
        13: [2020-10-16 01:40:13.184] prepare took 0ms - succeeded, sql="select max(timestamp) from raw_events"
        14: [2020-10-16 01:40:13.183] executeForCursorWindow took 0ms - succeeded, sql="select max(bundle_end_timestamp) from queue"
        15: [2020-10-16 01:40:13.183] prepare took 0ms - succeeded, sql="select max(bundle_end_timestamp) from queue"
        16: [2020-10-16 01:40:13.183] executeForCursorWindow took 0ms - succeeded, sql="select count(1) > 0 from queue where has_realtime = 1"
        17: [2020-10-16 01:40:13.183] prepare took 0ms - succeeded, sql="select count(1) > 0 from queue where has_realtime = 1"
        18: [2020-10-16 01:40:13.183] executeForCursorWindow took 0ms - succeeded, sql="select count(1) > 0 from raw_events where realtime = 1"
        19: [2020-10-16 01:40:13.183] prepare took 0ms - succeeded, sql="select count(1) > 0 from raw_events where realtime = 1"
        0: [2020-10-16 01:36:54.294] executeForCursorWindow took 0ms - succeeded, sql="SELECT registration_id FROM registration"
        1: [2020-10-16 01:36:54.294] prepare took 0ms - succeeded, sql="SELECT registration_id FROM registration"
        2: [2020-10-16 01:36:54.293] executeForCursorWindow took 0ms - succeeded, sql="SELECT registration_id FROM registration"
        3: [2020-10-16 01:36:54.293] prepare took 0ms - succeeded, sql="SELECT registration_id FROM registration"
        4: [2020-10-16 01:36:54.293] execute took 0ms - succeeded, sql="PRAGMA foreign_keys=1"
        5: [2020-10-16 01:36:54.293] executeForLong took 0ms - succeeded, sql="PRAGMA foreign_keys"
        6: [2020-10-16 01:36:54.289] execute took 4ms - succeeded, sql="COMMIT;"
        7: [2020-10-16 01:36:54.289] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 8"
        8: [2020-10-16 01:36:54.289] prepare took 0ms - succeeded, sql="PRAGMA user_version = 8"
        9: [2020-10-16 01:36:54.289] executeForChangedRowCount took 0ms - succeeded, sql="CREATE INDEX registration_tachyon_app_name on registration(tachyon_app_name)"
        10: [2020-10-16 01:36:54.289] prepare took 0ms - succeeded, sql="CREATE INDEX registration_tachyon_app_name on registration(tachyon_app_name)"
        11: [2020-10-16 01:36:54.289] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE reachability(reachability_id TEXT, reachability_type INT,  registration_id INT,  reachability_normalized_id TEXT, FOREIGN KEY (registration_id) REFERENCES registration(registration_id) ON DELETE CASCADE, PRIMARY KEY (registration_id, reachability_type, reachability_id));"
        12: [2020-10-16 01:36:54.289] prepare took 0ms - succeeded, sql="CREATE TABLE reachability(reachability_id TEXT, reachability_type INT,  registration_id INT,  reachability_normalized_id TEXT, FOREIGN KEY (registration_id) REFERENCES registration(registration_id) ON DELETE CASCADE, PRIMARY KEY (registration_id, reachability_type, reachability_id));"
        13: [2020-10-16 01:36:54.288] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE registration ( registration_id INTEGER PRIMARY KEY AUTOINCREMENT, tachyon_app_name TEXT, tachyon_auth_token BLOB, auth_token_expire_at_timestamp_ms INT, identity_key_type INT NOT NULL DEFAULT 1, identity_key_private BLOB, identity_key_public BLOB, server_registration_id BLOB, server_registration_status INTEGER, auth_token_refreshed_at_timestamp_ms INTEGER, registration_properties BLOB);"
        14: [2020-10-16 01:36:54.288] prepare took 0ms - succeeded, sql="CREATE TABLE registration ( registration_id INTEGER PRIMARY KEY AUTOINCREMENT, tachyon_app_name TEXT, tachyon_auth_token BLOB, auth_token_expire_at_timestamp_ms INT, identity_key_type INT NOT NULL DEFAULT 1, identity_key_private BLOB, identity_key_public BLOB, server_registration_id BLOB, server_registration_status INTEGER, auth_token_refreshed_at_timestamp_ms INTEGER, registration_properties BLOB);"
        15: [2020-10-16 01:36:54.288] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        16: [2020-10-16 01:36:54.288] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        17: [2020-10-16 01:36:54.288] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        18: [2020-10-16 01:36:54.288] execute took 0ms - succeeded, sql="PRAGMA synchronous=FULL"
        19: [2020-10-16 01:36:54.288] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        0: [2020-10-16 01:36:46.351] executeForCursorWindow took 0ms - succeeded, sql="SELECT [sms_seqno_table_appdatasearch].[seqno] AS seqno, CASE WHEN [sms_seqno_table_appdatasearch].[action_type] = '0' THEN 'add' ELSE 'del' END AS action,[sms_seqno_table_appdatasearch].[uri] AS uri,[sms_seqno_table_appdatasearch].[tag] AS tag FROM [sms_seqno_table_appdatasearch] WHERE ([sms_seqno_table_appdatasearch].[tag] IS NOT NULL  AND [sms_seqno_table_appdatasearch].[seqno] > 0) ORDER BY [sms_seqno_table_appdatasearch].[seqno] LIMIT 100"
        1: [2020-10-16 01:36:46.349] executeForCursorWindow took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        2: [2020-10-16 01:36:46.345] prepare took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        3: [2020-10-16 01:36:46.340] prepare took 3ms - succeeded, sql="SELECT [sms_seqno_table_appdatasearch].[seqno] AS seqno, CASE WHEN [sms_seqno_table_appdatasearch].[action_type] = '0' THEN 'add' ELSE 'del' END AS action,[sms_seqno_table_appdatasearch].[uri] AS uri,[sms_seqno_table_appdatasearch].[tag] AS tag FROM [sms_seqno_table_appdatasearch] WHERE ([sms_seqno_table_appdatasearch].[tag] IS NOT NULL  AND [sms_seqno_table_appdatasearch].[seqno] > 0) ORDER BY [sms_seqno_table_appdatasearch].[seqno] LIMIT 100"
        4: [2020-10-16 01:36:46.338] execute took 0ms - succeeded, sql="ROLLBACK;"
        5: [2020-10-16 01:36:46.338] executeForCursorWindow took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        6: [2020-10-16 01:36:46.331] prepare took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        7: [2020-10-16 01:36:46.325] execute took 6ms - succeeded, sql="BEGIN EXCLUSIVE;"
        8: [2020-10-16 01:36:46.318] executeForCursorWindow took 6ms - succeeded, sql="SELECT [sms_seqno_table_appdatasearch].[seqno] AS seqno, CASE WHEN [sms_seqno_table_appdatasearch].[action_type] = '0' AND [mmssms].[uri] IS NOT NULL THEN 'add' ELSE 'del' END AS action,[sms_seqno_table_appdatasearch].[uri] AS uri,score AS doc_score,date AS created_timestamp,[mmssms].[date] AS section_date,[mmssms].[thread_id] AS section_thread_id,[mmssms].[address] AS section_address,[mmssms].[read] AS section_read,[mmssms].[content_type] AS section_content_type,[mmssms].[subject] AS section_subject,[mmssms].[media_uri] AS section_media_uri,[mmssms].[_id] AS section__id,[mmssms].[type] AS section_type,[mmssms].[body] AS section_body FROM (SELECT * FROM [sms_seqno_table_appdatasearch] WHERE [sms_seqno_table_appdatasearch].[tag] IS NULL) AS sms_seqno_table_appdatasearch LEFT OUTER JOIN [mmssms] ON [sms_seqno_table_appdatasearch].[uri] = [mmssms].[uri] WHERE [sms_seqno_table_appdatasearch].[seqno] > 0 GROUP BY [sms_seqno_table_appdatasearch].[seqno] ORDER BY [sms_seqno_table_appdatasearch].[seqno] LIMIT 20"
        9: [2020-10-16 01:36:46.305] executeForCursorWindow took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        10: [2020-10-16 01:36:46.304] prepare took 0ms - succeeded, sql="SELECT incarnation FROM incarnation_appdatasearch WHERE corpus_name = ?"
        11: [2020-10-16 01:36:46.292] prepare took 12ms - succeeded, sql="SELECT [sms_seqno_table_appdatasearch].[seqno] AS seqno, CASE WHEN [sms_seqno_table_appdatasearch].[action_type] = '0' AND [mmssms].[uri] IS NOT NULL THEN 'add' ELSE 'del' END AS action,[sms_seqno_table_appdatasearch].[uri] AS uri,score AS doc_score,date AS created_timestamp,[mmssms].[date] AS section_date,[mmssms].[thread_id] AS section_thread_id,[mmssms].[address] AS section_address,[mmssms].[read] AS section_read,[mmssms].[content_type] AS section_content_type,[mmssms].[subject] AS section_subject,[mmssms].[media_uri] AS section_media_uri,[mmssms].[_id] AS section__id,[mmssms].[type] AS section_type,[mmssms].[body] AS section_body FROM (SELECT * FROM [sms_seqno_table_appdatasearch] WHERE [sms_seqno_table_appdatasearch].[tag] IS NULL) AS sms_seqno_table_appdatasearch LEFT OUTER JOIN [mmssms] ON [sms_seqno_table_appdatasearch].[uri] = [mmssms].[uri] WHERE [sms_seqno_table_appdatasearch].[seqno] > 0 GROUP BY [sms_seqno_table_appdatasearch].[seqno] ORDER BY [sms_seqno_table_appdatasearch].[seqno] LIMIT 20"
        12: [2020-10-16 01:36:46.290] execute took 0ms - succeeded, sql="ROLLBACK;"
        13: [2020-10-16 01:36:46.289] executeForCursorWindow took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        14: [2020-10-16 01:36:46.288] prepare took 0ms - succeeded, sql="SELECT seqno_table_complete FROM incarnation_appdatasearch WHERE corpus_name = ?"
        15: [2020-10-16 01:36:46.288] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        16: [2020-10-16 01:36:44.473] execute took 0ms - succeeded, sql="COMMIT;"
        17: [2020-10-16 01:36:44.452] execute took 8ms - succeeded, sql="BEGIN EXCLUSIVE;"
        18: [2020-10-16 01:36:44.378] executeForCursorWindow took 0ms - succeeded, sql="SELECT _id, msg_type FROM mmssms"
        19: [2020-10-16 01:36:44.377] prepare took 0ms - succeeded, sql="SELECT _id, msg_type FROM mmssms"
        0: [2020-10-16 01:36:45.859] executeForCursorWindow took 2ms - succeeded, sql="SELECT path FROM files WHERE domain_id = ? AND expires_at <= ?"
        1: [2020-10-16 01:36:45.856] prepare took 1ms - succeeded, sql="SELECT path FROM files WHERE domain_id = ? AND expires_at <= ?"
        2: [2020-10-16 01:36:45.673] executeForCursorWindow took 0ms - succeeded, sql="SELECT path FROM files WHERE domain_id = ? AND expires_at <= ?"
        3: [2020-10-16 01:36:45.672] prepare took 0ms - succeeded, sql="SELECT path FROM files WHERE domain_id = ? AND expires_at <= ?"
        4: [2020-10-16 01:36:45.666] execute took 5ms - succeeded, sql="COMMIT;"
        5: [2020-10-16 01:36:45.665] executeForCursorWindow took 0ms - succeeded, sql="SELECT domain_id FROM domains WHERE name = ? ORDER BY domain_id"
        6: [2020-10-16 01:36:45.665] prepare took 0ms - succeeded, sql="SELECT domain_id FROM domains WHERE name = ? ORDER BY domain_id"
        7: [2020-10-16 01:36:45.665] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT OR IGNORE  INTO domains(name,created,last_update) VALUES (?,?,?)"
        8: [2020-10-16 01:36:45.665] prepare took 0ms - succeeded, sql="INSERT OR IGNORE  INTO domains(name,created,last_update) VALUES (?,?,?)"
        9: [2020-10-16 01:36:45.665] executeForChangedRowCount took 0ms - succeeded, sql="CREATE UNIQUE INDEX IF NOT EXISTS domain_id_idx ON domains (name);"
        10: [2020-10-16 01:36:45.665] prepare took 0ms - succeeded, sql="CREATE UNIQUE INDEX IF NOT EXISTS domain_id_idx ON domains (name);"
        11: [2020-10-16 01:36:45.665] executeForChangedRowCount took 0ms - succeeded, sql="CREATE INDEX IF NOT EXISTS files_expiration_idx ON files (domain_id, expires_at);"
        12: [2020-10-16 01:36:45.665] prepare took 0ms - succeeded, sql="CREATE INDEX IF NOT EXISTS files_expiration_idx ON files (domain_id, expires_at);"
        13: [2020-10-16 01:36:45.639] executeForCursorWindow took 0ms - succeeded, sql="SELECT name FROM domains GROUP BY name HAVING count(domain_id) > 1;"
        14: [2020-10-16 01:36:45.624] prepare took 0ms - succeeded, sql="SELECT name FROM domains GROUP BY name HAVING count(domain_id) > 1;"
        15: [2020-10-16 01:36:45.624] executeForChangedRowCount took 0ms - succeeded, sql="CREATE UNIQUE INDEX IF NOT EXISTS files_domain_idx ON files (domain_id, path);"
        16: [2020-10-16 01:36:45.623] prepare took 0ms - succeeded, sql="CREATE UNIQUE INDEX IF NOT EXISTS files_domain_idx ON files (domain_id, path);"
        17: [2020-10-16 01:36:45.618] executeForChangedRowCount took 2ms - succeeded, sql="CREATE TABLE IF NOT EXISTS files (file_id INTEGER PRIMARY KEY AUTOINCREMENT, created DATETIME, last_update DATETIME, domain_id INTEGER REFERENCES domains, path TEXT, expires_at TIMESTAMP);"
        18: [2020-10-16 01:36:45.618] prepare took 0ms - succeeded, sql="CREATE TABLE IF NOT EXISTS files (file_id INTEGER PRIMARY KEY AUTOINCREMENT, created DATETIME, last_update DATETIME, domain_id INTEGER REFERENCES domains, path TEXT, expires_at TIMESTAMP);"
        19: [2020-10-16 01:36:45.610] executeForChangedRowCount took 2ms - succeeded, sql="CREATE TABLE IF NOT EXISTS domains (domain_id INTEGER PRIMARY KEY AUTOINCREMENT, created DATETIME, last_update DATETIME, name TEXT);"
        0: [2020-10-16 01:36:49.804] executeForCursorWindow took 0ms - succeeded, sql="SELECT name, value FROM saved_global"
        1: [2020-10-16 01:36:49.804] prepare took 0ms - succeeded, sql="SELECT name, value FROM saved_global"
        2: [2020-10-16 01:36:49.796] executeForCursorWindow took 0ms - succeeded, sql="SELECT name, value FROM saved_secure"
        3: [2020-10-16 01:36:49.796] prepare took 0ms - succeeded, sql="SELECT name, value FROM saved_secure"
        4: [2020-10-16 01:36:49.796] executeForCursorWindow took 0ms - succeeded, sql="SELECT name, value FROM saved_system"
        5: [2020-10-16 01:36:49.796] prepare took 0ms - succeeded, sql="SELECT name, value FROM saved_system"
        6: [2020-10-16 01:36:49.794] execute took 1ms - succeeded, sql="COMMIT;"
        7: [2020-10-16 01:36:49.793] executeForCursorWindow took 0ms - succeeded, sql="SELECT name, value FROM overrides"
        8: [2020-10-16 01:36:49.793] prepare took 0ms - succeeded, sql="SELECT name, value FROM overrides"
        9: [2020-10-16 01:36:49.793] execute took 1ms - succeeded, sql="INSERT OR REPLACE INTO main (name, value) VALUES (?, ?)"
        10: [2020-10-16 01:36:49.793] prepare took 0ms - succeeded, sql="INSERT OR REPLACE INTO main (name, value) VALUES (?, ?)"
        11: [2020-10-16 01:36:49.781] executeForCursorWindow took 1ms - succeeded, sql="SELECT name, value FROM main ORDER BY name"
        12: [2020-10-16 01:36:49.781] prepare took 0ms - succeeded, sql="SELECT name, value FROM main ORDER BY name"
        13: [2020-10-16 01:36:49.781] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        14: [2020-10-16 01:36:49.776] execute took 5ms - succeeded, sql="COMMIT;"
        15: [2020-10-16 01:36:49.776] execute took 0ms - succeeded, sql="INSERT INTO main (name, value) VALUES (?, ?)"
        16: [2020-10-16 01:36:49.776] execute took 0ms - succeeded, sql="INSERT INTO main (name, value) VALUES (?, ?)"
        17: [2020-10-16 01:36:49.776] execute took 0ms - succeeded, sql="INSERT INTO main (name, value) VALUES (?, ?)"
        18: [2020-10-16 01:36:49.776] execute took 0ms - succeeded, sql="INSERT INTO main (name, value) VALUES (?, ?)"
        19: [2020-10-16 01:36:49.776] execute took 0ms - succeeded, sql="INSERT INTO main (name, value) VALUES (?, ?)"
        0: [2020-10-16 01:37:17.386] execute took 0ms - succeeded, sql="COMMIT;"
        1: [2020-10-16 01:37:17.386] executeForCursorWindow took 0ms - succeeded, sql="SELECT * FROM (SELECT begin -(-14400000)  -(minutes*60000) AS myAlarmTime,Instances.event_id AS eventId,begin,end,title,allDay,method,minutes FROM Instances INNER JOIN view_events ON (view_events._id=Instances.event_id) INNER JOIN Reminders ON (Instances.event_id=Reminders.event_id) WHERE visible=1 AND myAlarmTime>=CAST(? AS INT) AND myAlarmTime<=CAST(? AS INT) AND end>=? AND method=1 AND allDay=1 UNION ALL SELECT begin -(minutes*60000) AS myAlarmTime,Instances.event_id AS eventId,begin,end,title,allDay,method,minutes FROM Instances INNER JOIN view_events ON (view_events._id=Instances.event_id) INNER JOIN Reminders ON (Instances.event_id=Reminders.event_id) WHERE visible=1 AND myAlarmTime>=CAST(? AS INT) AND myAlarmTime<=CAST(? AS INT) AND end>=? AND method=1 AND allDay=0) WHERE 0=(SELECT count(*) FROM CalendarAlerts CA WHERE CA.event_id=eventId AND CA.begin=begin AND CA.alarmTime=myAlarmTime) ORDER BY myAlarmTime,begin,title"
        2: [2020-10-16 01:37:17.386] prepare took 0ms - succeeded, sql="SELECT * FROM (SELECT begin -(-14400000)  -(minutes*60000) AS myAlarmTime,Instances.event_id AS eventId,begin,end,title,allDay,method,minutes FROM Instances INNER JOIN view_events ON (view_events._id=Instances.event_id) INNER JOIN Reminders ON (Instances.event_id=Reminders.event_id) WHERE visible=1 AND myAlarmTime>=CAST(? AS INT) AND myAlarmTime<=CAST(? AS INT) AND end>=? AND method=1 AND allDay=1 UNION ALL SELECT begin -(minutes*60000) AS myAlarmTime,Instances.event_id AS eventId,begin,end,title,allDay,method,minutes FROM Instances INNER JOIN view_events ON (view_events._id=Instances.event_id) INNER JOIN Reminders ON (Instances.event_id=Reminders.event_id) WHERE visible=1 AND myAlarmTime>=CAST(? AS INT) AND myAlarmTime<=CAST(? AS INT) AND end>=? AND method=1 AND allDay=0) WHERE 0=(SELECT count(*) FROM CalendarAlerts CA WHERE CA.event_id=eventId AND CA.begin=begin AND CA.alarmTime=myAlarmTime) ORDER BY myAlarmTime,begin,title"
        3: [2020-10-16 01:37:17.386] executeForCursorWindow took 0ms - succeeded, sql="SELECT key, value FROM CalendarCache WHERE key=?"
        4: [2020-10-16 01:37:17.386] prepare took 0ms - succeeded, sql="SELECT key, value FROM CalendarCache WHERE key=?"
        5: [2020-10-16 01:37:17.386] executeForCursorWindow took 0ms - succeeded, sql="SELECT key, value FROM CalendarCache WHERE key=?"
        6: [2020-10-16 01:37:17.386] prepare took 0ms - succeeded, sql="SELECT key, value FROM CalendarCache WHERE key=?"
        7: [2020-10-16 01:37:17.385] executeForCursorWindow took 0ms - succeeded, sql="SELECT alarmTime FROM CalendarAlerts, view_events WHERE (view_events._id=CalendarAlerts.event_id) AND (alarmTime>=?) ORDER BY alarmTime ASC"
        8: [2020-10-16 01:37:17.385] prepare took 0ms - succeeded, sql="SELECT alarmTime FROM CalendarAlerts, view_events WHERE (view_events._id=CalendarAlerts.event_id) AND (alarmTime>=?) ORDER BY alarmTime ASC"
        9: [2020-10-16 01:37:17.385] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM CalendarAlerts WHERE _id IN (SELECT ca._id FROM CalendarAlerts AS ca LEFT OUTER JOIN Instances USING (event_id,begin,end) LEFT OUTER JOIN Reminders AS r ON (ca.event_id=r.event_id AND ca.minutes=r.minutes) LEFT OUTER JOIN view_events AS e ON (ca.event_id=e._id) WHERE Instances.begin ISNULL   OR ca.alarmTime<?   OR (r.minutes ISNULL       AND ca.minutes<>0)   OR e.visible=0)"
        10: [2020-10-16 01:37:17.385] prepare took 0ms - succeeded, sql="DELETE FROM CalendarAlerts WHERE _id IN (SELECT ca._id FROM CalendarAlerts AS ca LEFT OUTER JOIN Instances USING (event_id,begin,end) LEFT OUTER JOIN Reminders AS r ON (ca.event_id=r.event_id AND ca.minutes=r.minutes) LEFT OUTER JOIN view_events AS e ON (ca.event_id=e._id) WHERE Instances.begin ISNULL   OR ca.alarmTime<?   OR (r.minutes ISNULL       AND ca.minutes<>0)   OR e.visible=0)"
        11: [2020-10-16 01:37:17.385] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM CalendarAlerts WHERE state=0"
        12: [2020-10-16 01:37:17.385] prepare took 0ms - succeeded, sql="DELETE FROM CalendarAlerts WHERE state=0"
        13: [2020-10-16 01:37:17.385] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        14: [2020-10-16 01:37:12.384] execute took 0ms - succeeded, sql="COMMIT;"
        15: [2020-10-16 01:37:12.383] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        16: [2020-10-16 01:36:47.920] execute took 0ms - succeeded, sql="COMMIT;"
        17: [2020-10-16 01:36:47.920] executeForCursorWindow took 0ms - succeeded, sql="SELECT * FROM (SELECT begin -(-14400000)  -(minutes*60000) AS myAlarmTime,Instances.event_id AS eventId,begin,end,title,allDay,method,minutes FROM Instances INNER JOIN view_events ON (view_events._id=Instances.event_id) INNER JOIN Reminders ON (Instances.event_id=Reminders.event_id) WHERE visible=1 AND myAlarmTime>=CAST(? AS INT) AND myAlarmTime<=CAST(? AS INT) AND end>=? AND method=1 AND allDay=1 UNION ALL SELECT begin -(minutes*60000) AS myAlarmTime,Instances.event_id AS eventId,begin,end,title,allDay,method,minutes FROM Instances INNER JOIN view_events ON (view_events._id=Instances.event_id) INNER JOIN Reminders ON (Instances.event_id=Reminders.event_id) WHERE visible=1 AND myAlarmTime>=CAST(? AS INT) AND myAlarmTime<=CAST(? AS INT) AND end>=? AND method=1 AND allDay=0) WHERE 0=(SELECT count(*) FROM CalendarAlerts CA WHERE CA.event_id=eventId AND CA.begin=begin AND CA.alarmTime=myAlarmTime) ORDER BY myAlarmTime,begin,title"
        18: [2020-10-16 01:36:47.919] prepare took 1ms - succeeded, sql="SELECT * FROM (SELECT begin -(-14400000)  -(minutes*60000) AS myAlarmTime,Instances.event_id AS eventId,begin,end,title,allDay,method,minutes FROM Instances INNER JOIN view_events ON (view_events._id=Instances.event_id) INNER JOIN Reminders ON (Instances.event_id=Reminders.event_id) WHERE visible=1 AND myAlarmTime>=CAST(? AS INT) AND myAlarmTime<=CAST(? AS INT) AND end>=? AND method=1 AND allDay=1 UNION ALL SELECT begin -(minutes*60000) AS myAlarmTime,Instances.event_id AS eventId,begin,end,title,allDay,method,minutes FROM Instances INNER JOIN view_events ON (view_events._id=Instances.event_id) INNER JOIN Reminders ON (Instances.event_id=Reminders.event_id) WHERE visible=1 AND myAlarmTime>=CAST(? AS INT) AND myAlarmTime<=CAST(? AS INT) AND end>=? AND method=1 AND allDay=0) WHERE 0=(SELECT count(*) FROM CalendarAlerts CA WHERE CA.event_id=eventId AND CA.begin=begin AND CA.alarmTime=myAlarmTime) ORDER BY myAlarmTime,begin,title"
        19: [2020-10-16 01:36:47.919] executeForCursorWindow took 0ms - succeeded, sql="SELECT key, value FROM CalendarCache WHERE key=?"
        0: [2020-10-16 01:36:11.287] execute took 0ms - succeeded, sql="COMMIT;"
        1: [2020-10-16 01:36:11.287] executeForCursorWindow took 0ms - succeeded, sql="SELECT _sync_account, _sync_account_type FROM _sync_state"
        2: [2020-10-16 01:36:11.286] prepare took 0ms - succeeded, sql="SELECT _sync_account, _sync_account_type FROM _sync_state"
        3: [2020-10-16 01:36:11.286] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        4: [2020-10-16 01:36:11.286] executeForLong took 0ms - succeeded, sql="select version from _sync_state_metadata"
        5: [2020-10-16 01:36:11.286] prepare took 0ms - succeeded, sql="select version from _sync_state_metadata"
        6: [2020-10-16 01:36:11.286] execute took 0ms - succeeded, sql="COMMIT;"
        7: [2020-10-16 01:36:11.286] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 11"
        8: [2020-10-16 01:36:11.286] prepare took 0ms - succeeded, sql="PRAGMA user_version = 11"
        9: [2020-10-16 01:36:11.286] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT INTO _sync_state_metadata(version) VALUES (?)"
        10: [2020-10-16 01:36:11.286] prepare took 0ms - succeeded, sql="INSERT INTO _sync_state_metadata(version) VALUES (?)"
        11: [2020-10-16 01:36:11.286] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE _sync_state_metadata (version INTEGER);"
        12: [2020-10-16 01:36:11.286] prepare took 0ms - succeeded, sql="CREATE TABLE _sync_state_metadata (version INTEGER);"
        13: [2020-10-16 01:36:11.286] executeForChangedRowCount took 0ms - succeeded, sql="DROP TABLE IF EXISTS _sync_state_metadata"
        14: [2020-10-16 01:36:11.286] prepare took 0ms - succeeded, sql="DROP TABLE IF EXISTS _sync_state_metadata"
        15: [2020-10-16 01:36:11.286] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE _sync_state (_id INTEGER PRIMARY KEY,_sync_account TEXT,_sync_account_type TEXT,data TEXT,UNIQUE(_sync_account, _sync_account_type));"
        16: [2020-10-16 01:36:11.286] prepare took 0ms - succeeded, sql="CREATE TABLE _sync_state (_id INTEGER PRIMARY KEY,_sync_account TEXT,_sync_account_type TEXT,data TEXT,UNIQUE(_sync_account, _sync_account_type));"
        17: [2020-10-16 01:36:11.286] executeForChangedRowCount took 0ms - succeeded, sql="DROP TABLE IF EXISTS _sync_state"
        18: [2020-10-16 01:36:11.286] prepare took 0ms - succeeded, sql="DROP TABLE IF EXISTS _sync_state"
        19: [2020-10-16 01:36:11.286] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE _deleted_feeds (_sync_version TEXT,_sync_id TEXT,_sync_account TEXT,_sync_account_type TEXT,_sync_mark INTEGER, UNIQUE(_sync_id))"
        0: [2020-10-16 01:37:00.081] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        1: [2020-10-16 01:37:00.081] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        2: [2020-10-16 01:37:00.081] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE (name=?)"
        3: [2020-10-16 01:36:55.647] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        4: [2020-10-16 01:36:55.647] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        5: [2020-10-16 01:36:55.647] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE (name=?)"
        6: [2020-10-16 01:36:55.643] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        7: [2020-10-16 01:36:55.642] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        8: [2020-10-16 01:36:55.642] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE (name=?)"
        9: [2020-10-16 01:36:55.636] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        10: [2020-10-16 01:36:55.635] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        11: [2020-10-16 01:36:55.635] prepare took 1ms - succeeded, sql="SELECT value FROM partner WHERE (name=?)"
        12: [2020-10-16 01:36:55.629] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        13: [2020-10-16 01:36:55.629] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        14: [2020-10-16 01:36:55.629] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE (name=?)"
        15: [2020-10-16 01:36:55.627] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        16: [2020-10-16 01:36:55.627] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        17: [2020-10-16 01:36:55.627] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE (name=?)"
        18: [2020-10-16 01:36:55.625] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        19: [2020-10-16 01:36:55.625] prepare took 0ms - succeeded, sql="SELECT value FROM partner WHERE ((name=?))"
        0: [2020-10-16 01:36:52.772] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM download_states WHERE 1=1"
        1: [2020-10-16 01:36:52.772] prepare took 0ms - succeeded, sql="SELECT data FROM download_states WHERE 1=1"
        2: [2020-10-16 01:36:52.772] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM download_states WHERE 1=1"
        3: [2020-10-16 01:36:52.772] prepare took 0ms - succeeded, sql="SELECT data FROM download_states WHERE 1=1"
        4: [2020-10-16 01:36:52.769] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM download_states WHERE 1=1"
        5: [2020-10-16 01:36:52.769] prepare took 0ms - succeeded, sql="SELECT data FROM download_states WHERE 1=1"
        6: [2020-10-16 01:36:52.769] execute took 0ms - succeeded, sql="COMMIT;"
        7: [2020-10-16 01:36:52.769] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM download_states WHERE 1=1"
        8: [2020-10-16 01:36:52.769] prepare took 0ms - succeeded, sql="SELECT data FROM download_states WHERE 1=1"
        9: [2020-10-16 01:36:52.769] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        10: [2020-10-16 01:36:52.751] execute took 17ms - succeeded, sql="COMMIT;"
        11: [2020-10-16 01:36:52.751] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 1"
        12: [2020-10-16 01:36:52.751] prepare took 0ms - succeeded, sql="PRAGMA user_version = 1"
        13: [2020-10-16 01:36:52.751] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE download_states_audit(data_table_pk INTEGER,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        14: [2020-10-16 01:36:52.751] prepare took 0ms - succeeded, sql="CREATE TABLE download_states_audit(data_table_pk INTEGER,data BLOB,timestamp INTEGER,reason TEXT,trace TEXT)"
        15: [2020-10-16 01:36:52.751] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE download_states (data BLOB, pk INTEGER PRIMARY KEY)"
        16: [2020-10-16 01:36:52.751] prepare took 0ms - succeeded, sql="CREATE TABLE download_states (data BLOB, pk INTEGER PRIMARY KEY)"
        17: [2020-10-16 01:36:52.750] execute took 1ms - succeeded, sql="BEGIN EXCLUSIVE;"
        18: [2020-10-16 01:36:52.750] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        19: [2020-10-16 01:36:52.750] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        0: [2020-10-16 01:36:59.480] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT OR REPLACE  INTO config_table(config,value) VALUES (?,?)"
        1: [2020-10-16 01:36:59.480] prepare took 0ms - succeeded, sql="INSERT OR REPLACE  INTO config_table(config,value) VALUES (?,?)"
        2: [2020-10-16 01:36:59.480] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT OR REPLACE  INTO config_table(config,value) VALUES (?,?)"
        3: [2020-10-16 01:36:59.480] prepare took 0ms - succeeded, sql="INSERT OR REPLACE  INTO config_table(config,value) VALUES (?,?)"
        4: [2020-10-16 01:36:59.478] executeForLastInsertedRowId took 1ms - succeeded, sql="INSERT OR REPLACE  INTO config_table(config,value) VALUES (?,?)"
        5: [2020-10-16 01:36:59.478] prepare took 0ms - succeeded, sql="INSERT OR REPLACE  INTO config_table(config,value) VALUES (?,?)"
        6: [2020-10-16 01:36:59.478] executeForLong took 0ms - succeeded, sql="select count(*) from crash_reports"
        7: [2020-10-16 01:36:59.478] prepare took 0ms - succeeded, sql="select count(*) from crash_reports"
        8: [2020-10-16 01:36:59.477] executeForCursorWindow took 0ms - succeeded, sql="SELECT * FROM crash_reports ORDER BY ts LIMIT 1"
        9: [2020-10-16 01:36:59.476] prepare took 0ms - succeeded, sql="SELECT * FROM crash_reports ORDER BY ts LIMIT 1"
        10: [2020-10-16 01:36:59.472] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM config_table WHERE config = ?"
        11: [2020-10-16 01:36:59.471] prepare took 0ms - succeeded, sql="SELECT value FROM config_table WHERE config = ?"
        12: [2020-10-16 01:36:59.471] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM config_table WHERE config = ?"
        13: [2020-10-16 01:36:59.471] prepare took 0ms - succeeded, sql="SELECT value FROM config_table WHERE config = ?"
        14: [2020-10-16 01:36:59.470] executeForCursorWindow took 0ms - succeeded, sql="SELECT value FROM config_table WHERE config = ?"
        15: [2020-10-16 01:36:59.470] prepare took 0ms - succeeded, sql="SELECT value FROM config_table WHERE config = ?"
        16: [2020-10-16 01:36:59.468] execute took 0ms - succeeded, sql="COMMIT;"
        17: [2020-10-16 01:36:59.468] executeForCursorWindow took 0ms - succeeded, sql="SELECT id FROM crash_reports ORDER BY fatal desc, ts desc"
        18: [2020-10-16 01:36:59.467] prepare took 0ms - succeeded, sql="SELECT id FROM crash_reports ORDER BY fatal desc, ts desc"
        19: [2020-10-16 01:36:59.467] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        0: [2020-10-16 01:36:12.897] executeForCursorWindow took 0ms - succeeded, sql="SELECT _id FROM events ORDER BY _id ASC"
        1: [2020-10-16 01:36:12.896] prepare took 0ms - succeeded, sql="SELECT _id FROM events ORDER BY _id ASC"
        2: [2020-10-16 01:36:12.893] executeForChangedRowCount took 0ms - succeeded, sql="UPDATE events SET status=?"
        3: [2020-10-16 01:36:12.893] prepare took 0ms - succeeded, sql="UPDATE events SET status=?"
        4: [2020-10-16 01:36:12.893] execute took 0ms - succeeded, sql="COMMIT;"
        5: [2020-10-16 01:36:12.893] executeForChangedRowCount took 0ms - succeeded, sql="PRAGMA user_version = 4"
        6: [2020-10-16 01:36:12.893] prepare took 0ms - succeeded, sql="PRAGMA user_version = 4"
        7: [2020-10-16 01:36:12.892] executeForChangedRowCount took 1ms - succeeded, sql="CREATE TABLE app_installs (_id INTEGER PRIMARY KEY,package TEXT,source TEXT,version_code INTEGER,timestamp INTEGER);"
        8: [2020-10-16 01:36:12.892] prepare took 0ms - succeeded, sql="CREATE TABLE app_installs (_id INTEGER PRIMARY KEY,package TEXT,source TEXT,version_code INTEGER,timestamp INTEGER);"
        9: [2020-10-16 01:36:12.892] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE events (_id INTEGER PRIMARY KEY,ap TEXT,event_type TEXT,status INTEGER,CONSTRAINT event_unique UNIQUE(ap,event_type) ON CONFLICT IGNORE);"
        10: [2020-10-16 01:36:12.892] prepare took 0ms - succeeded, sql="CREATE TABLE events (_id INTEGER PRIMARY KEY,ap TEXT,event_type TEXT,status INTEGER,CONSTRAINT event_unique UNIQUE(ap,event_type) ON CONFLICT IGNORE);"
        11: [2020-10-16 01:36:12.892] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE pings (_id INTEGER PRIMARY KEY,contents TEXT,time_completed INTEGER,result TEXT);"
        12: [2020-10-16 01:36:12.892] prepare took 0ms - succeeded, sql="CREATE TABLE pings (_id INTEGER PRIMARY KEY,contents TEXT,time_completed INTEGER,result TEXT);"
        13: [2020-10-16 01:36:12.892] executeForChangedRowCount took 0ms - succeeded, sql="CREATE TABLE apps (_id INTEGER PRIMARY KEY,app_name TEXT,current_rlz TEXT,status INTEGER,CONSTRAINT ap_unique UNIQUE(app_name) ON CONFLICT REPLACE);"
        14: [2020-10-16 01:36:12.892] prepare took 0ms - succeeded, sql="CREATE TABLE apps (_id INTEGER PRIMARY KEY,app_name TEXT,current_rlz TEXT,status INTEGER,CONSTRAINT ap_unique UNIQUE(app_name) ON CONFLICT REPLACE);"
        15: [2020-10-16 01:36:12.892] execute took 0ms - succeeded, sql="BEGIN EXCLUSIVE;"
        16: [2020-10-16 01:36:12.892] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        17: [2020-10-16 01:36:12.892] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        18: [2020-10-16 01:36:12.891] execute took 0ms - succeeded, sql="COMMIT"
        19: [2020-10-16 01:36:12.891] execute took 0ms - succeeded, sql="REINDEX LOCALIZED"
        0: [2020-10-16 01:36:07.910] executeForCursorWindow took 0ms - succeeded, sql="SELECT uri FROM clients WHERE clientid = ?"
        1: [2020-10-16 01:36:07.909] prepare took 0ms - succeeded, sql="SELECT uri FROM clients WHERE clientid = ?"
        2: [2020-10-16 01:36:07.909] executeForCursorWindow took 0ms - succeeded, sql="SELECT clientid FROM clients"
        3: [2020-10-16 01:36:07.909] prepare took 0ms - succeeded, sql="SELECT clientid FROM clients"
        4: [2020-10-16 01:36:07.909] executeForCursorWindow took 0ms - succeeded, sql="SELECT lastupdate FROM clients"
        5: [2020-10-16 01:36:07.909] prepare took 0ms - succeeded, sql="SELECT lastupdate FROM clients"
        6: [2020-10-16 01:36:07.906] executeForCursorWindow took 0ms - succeeded, sql="SELECT uri FROM clients WHERE clientid = ?"
        7: [2020-10-16 01:36:07.906] prepare took 0ms - succeeded, sql="SELECT uri FROM clients WHERE clientid = ?"
        8: [2020-10-16 01:36:07.906] executeForLong took 1ms - succeeded, sql="PRAGMA user_version;"
        9: [2020-10-16 01:36:07.906] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        10: [2020-10-16 01:36:07.905] executeForString took 0ms - succeeded, sql="SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1"
        11: [2020-10-16 01:36:07.905] execute took 0ms - succeeded, sql="CREATE TABLE IF NOT EXISTS android_metadata (locale TEXT)"
        12: [2020-10-16 01:36:07.905] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint=100"
        13: [2020-10-16 01:36:07.905] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint"
        14: [2020-10-16 01:36:07.905] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit=524288"
        15: [2020-10-16 01:36:07.905] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit"
        16: [2020-10-16 01:36:07.905] execute took 0ms - succeeded, sql="PRAGMA synchronous=NORMAL"
        17: [2020-10-16 01:36:07.905] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        18: [2020-10-16 01:36:07.904] executeForString took 1ms - succeeded, sql="PRAGMA journal_mode"
        19: [2020-10-16 01:36:07.904] executeForLong took 0ms - succeeded, sql="PRAGMA foreign_keys"
        0: [2020-10-16 01:36:07.909] executeForCursorWindow took 0ms - succeeded, sql="SELECT pendingid, type, status, id, locale, description, filename, url, date, checksum, filesize, version, formatversion, flags, rawChecksum, remainingRetries FROM pendingUpdates WHERE status = ? OR status = ? OR status = ? ORDER BY locale"
        1: [2020-10-16 01:36:07.909] prepare took 0ms - succeeded, sql="SELECT pendingid, type, status, id, locale, description, filename, url, date, checksum, filesize, version, formatversion, flags, rawChecksum, remainingRetries FROM pendingUpdates WHERE status = ? OR status = ? OR status = ? ORDER BY locale"
        2: [2020-10-16 01:36:07.909] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        3: [2020-10-16 01:36:07.909] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        4: [2020-10-16 01:36:07.909] executeForString took 0ms - succeeded, sql="SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1"
        5: [2020-10-16 01:36:07.909] execute took 0ms - succeeded, sql="CREATE TABLE IF NOT EXISTS android_metadata (locale TEXT)"
        6: [2020-10-16 01:36:07.909] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint=100"
        7: [2020-10-16 01:36:07.909] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint"
        8: [2020-10-16 01:36:07.909] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit=524288"
        9: [2020-10-16 01:36:07.909] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit"
        10: [2020-10-16 01:36:07.909] execute took 0ms - succeeded, sql="PRAGMA synchronous=NORMAL"
        11: [2020-10-16 01:36:07.909] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        12: [2020-10-16 01:36:07.907] executeForString took 2ms - succeeded, sql="PRAGMA journal_mode"
        13: [2020-10-16 01:36:07.907] executeForLong took 0ms - succeeded, sql="PRAGMA foreign_keys"
        14: [2020-10-16 01:36:07.907] executeForLong took 0ms - succeeded, sql="PRAGMA page_size"
        0: [2020-10-16 01:36:44.982] executeForCursorWindow took 0ms - succeeded, sql="SELECT * FROM carrier_id WHERE (mccmnc=?)"
        1: [2020-10-16 01:36:44.982] prepare took 0ms - succeeded, sql="SELECT * FROM carrier_id WHERE (mccmnc=?)"
        2: [2020-10-16 01:36:44.567] executeForCursorWindow took 0ms - succeeded, sql="SELECT * FROM carrier_id WHERE (mccmnc=?)"
        3: [2020-10-16 01:36:44.567] prepare took 0ms - succeeded, sql="SELECT * FROM carrier_id WHERE (mccmnc=?)"
        4: [2020-10-16 01:36:07.869] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        5: [2020-10-16 01:36:07.869] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        6: [2020-10-16 01:36:07.869] executeForString took 0ms - succeeded, sql="SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1"
        7: [2020-10-16 01:36:07.869] execute took 0ms - succeeded, sql="CREATE TABLE IF NOT EXISTS android_metadata (locale TEXT)"
        8: [2020-10-16 01:36:07.869] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint=100"
        9: [2020-10-16 01:36:07.869] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint"
        10: [2020-10-16 01:36:07.869] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit=524288"
        11: [2020-10-16 01:36:07.869] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit"
        12: [2020-10-16 01:36:07.869] execute took 0ms - succeeded, sql="PRAGMA synchronous=NORMAL"
        13: [2020-10-16 01:36:07.868] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        14: [2020-10-16 01:36:07.866] executeForString took 2ms - succeeded, sql="PRAGMA journal_mode"
        15: [2020-10-16 01:36:07.866] executeForLong took 0ms - succeeded, sql="PRAGMA foreign_keys"
        16: [2020-10-16 01:36:07.866] executeForLong took 0ms - succeeded, sql="PRAGMA page_size"
        0: [2020-10-16 01:36:45.020] executeForCursorWindow took 0ms - succeeded, sql="SELECT public_key, expiration_time, key_identifier FROM carrier_key WHERE (mcc=? and mnc=? and key_type=?)"
        1: [2020-10-16 01:36:45.020] prepare took 0ms - succeeded, sql="SELECT public_key, expiration_time, key_identifier FROM carrier_key WHERE (mcc=? and mnc=? and key_type=?)"
        2: [2020-10-16 01:36:45.020] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        3: [2020-10-16 01:36:45.020] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        4: [2020-10-16 01:36:45.020] executeForString took 0ms - succeeded, sql="SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1"
        5: [2020-10-16 01:36:45.020] execute took 0ms - succeeded, sql="CREATE TABLE IF NOT EXISTS android_metadata (locale TEXT)"
        6: [2020-10-16 01:36:45.020] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint=100"
        7: [2020-10-16 01:36:45.020] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint"
        8: [2020-10-16 01:36:45.020] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit=524288"
        9: [2020-10-16 01:36:45.020] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit"
        10: [2020-10-16 01:36:45.020] execute took 0ms - succeeded, sql="PRAGMA synchronous=NORMAL"
        11: [2020-10-16 01:36:45.020] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        12: [2020-10-16 01:36:45.018] executeForString took 2ms - succeeded, sql="PRAGMA journal_mode"
        13: [2020-10-16 01:36:45.018] executeForLong took 0ms - succeeded, sql="PRAGMA foreign_keys"
        14: [2020-10-16 01:36:45.018] executeForLong took 0ms - succeeded, sql="PRAGMA page_size"
        0: [2020-10-16 01:40:54.165] executeForCursorWindow took 0ms - succeeded, sql="SELECT visibility._package, visibility.value, accounts.name, accounts.type FROM visibility JOIN accounts ON accounts._id = visibility.accounts_id"
        1: [2020-10-16 01:40:54.165] prepare took 0ms - succeeded, sql="SELECT visibility._package, visibility.value, accounts.name, accounts.type FROM visibility JOIN accounts ON accounts._id = visibility.accounts_id"
        2: [2020-10-16 01:40:54.165] executeForCursorWindow took 0ms - succeeded, sql="SELECT * FROM debug_table ORDER BY time"
        3: [2020-10-16 01:40:54.165] prepare took 0ms - succeeded, sql="SELECT * FROM debug_table ORDER BY time"
        4: [2020-10-16 01:36:09.324] executeForCursorWindow took 0ms - succeeded, sql="SELECT visibility._package, visibility.value, accounts.name, accounts.type FROM visibility JOIN accounts ON accounts._id = visibility.accounts_id"
        5: [2020-10-16 01:36:09.324] prepare took 0ms - succeeded, sql="SELECT visibility._package, visibility.value, accounts.name, accounts.type FROM visibility JOIN accounts ON accounts._id = visibility.accounts_id"
        6: [2020-10-16 01:36:09.323] executeForCursorWindow took 0ms - succeeded, sql="SELECT _id, type, name FROM accounts ORDER BY _id"
        7: [2020-10-16 01:36:09.323] prepare took 0ms - succeeded, sql="SELECT _id, type, name FROM accounts ORDER BY _id"
        8: [2020-10-16 01:36:09.317] executeForCursorWindow took 0ms - succeeded, sql="SELECT key, value FROM meta WHERE key LIKE ? ORDER BY key"
        9: [2020-10-16 01:36:09.316] prepare took 0ms - succeeded, sql="SELECT key, value FROM meta WHERE key LIKE ? ORDER BY key"
        10: [2020-10-16 01:36:09.310] executeForCursorWindow took 2ms - succeeded, sql="SELECT name,type FROM ceDb.accounts WHERE NOT EXISTS  (SELECT _id FROM accounts WHERE _id=ceDb.accounts._id )"
        11: [2020-10-16 01:36:09.309] prepare took 0ms - succeeded, sql="SELECT name,type FROM ceDb.accounts WHERE NOT EXISTS  (SELECT _id FROM accounts WHERE _id=ceDb.accounts._id )"
        12: [2020-10-16 01:36:09.307] executeForChangedRowCount took 2ms - succeeded, sql="ATTACH DATABASE '/data/system_ce/0/accounts_ce.db' AS ceDb"
        13: [2020-10-16 01:36:09.307] prepare took 0ms - succeeded, sql="ATTACH DATABASE '/data/system_ce/0/accounts_ce.db' AS ceDb"
        14: [2020-10-16 01:36:09.307] execute took 0ms - succeeded, sql="PRAGMA synchronous=FULL"
        15: [2020-10-16 01:36:09.307] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        16: [2020-10-16 01:36:09.288] executeForString took 19ms - succeeded, sql="PRAGMA journal_mode=TRUNCATE"
        17: [2020-10-16 01:36:09.288] executeForString took 0ms - succeeded, sql="PRAGMA journal_mode"
        18: [2020-10-16 01:36:07.811] executeForCursorWindow took 0ms - succeeded, sql="SELECT visibility._package, visibility.value, accounts.name, accounts.type FROM visibility JOIN accounts ON accounts._id = visibility.accounts_id"
        19: [2020-10-16 01:36:07.810] prepare took 0ms - succeeded, sql="SELECT visibility._package, visibility.value, accounts.name, accounts.type FROM visibility JOIN accounts ON accounts._id = visibility.accounts_id"
        0: [2020-10-16 01:36:51.579] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT INTO log(event_user_id,nid,flags,when_ms,action_count,demoted,noisy,pkg,event_time_ms,importance_final,event_type,category,importance_request,muted,key) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
        1: [2020-10-16 01:36:51.579] prepare took 0ms - succeeded, sql="INSERT INTO log(event_user_id,nid,flags,when_ms,action_count,demoted,noisy,pkg,event_time_ms,importance_final,event_type,category,importance_request,muted,key) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
        2: [2020-10-16 01:36:47.245] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT INTO log(event_user_id,nid,flags,when_ms,action_count,demoted,noisy,pkg,event_time_ms,importance_final,event_type,category,importance_request,muted,key) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
        3: [2020-10-16 01:36:47.245] prepare took 0ms - succeeded, sql="INSERT INTO log(event_user_id,nid,flags,when_ms,action_count,demoted,noisy,pkg,event_time_ms,importance_final,event_type,category,importance_request,muted,key) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
        4: [2020-10-16 01:36:11.700] executeForChangedRowCount took 0ms - succeeded, sql="DELETE FROM log WHERE event_time_ms < ?"
        5: [2020-10-16 01:36:11.699] prepare took 0ms - succeeded, sql="DELETE FROM log WHERE event_time_ms < ?"
        6: [2020-10-16 01:36:11.699] executeForLastInsertedRowId took 0ms - succeeded, sql="INSERT INTO log(event_user_id,nid,flags,when_ms,action_count,demoted,noisy,pkg,event_time_ms,importance_final,event_type,importance_request,muted,key) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
        7: [2020-10-16 01:36:11.699] prepare took 0ms - succeeded, sql="INSERT INTO log(event_user_id,nid,flags,when_ms,action_count,demoted,noisy,pkg,event_time_ms,importance_final,event_type,importance_request,muted,key) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
        8: [2020-10-16 01:36:11.699] executeForLong took 0ms - succeeded, sql="PRAGMA user_version;"
        9: [2020-10-16 01:36:11.699] prepare took 0ms - succeeded, sql="PRAGMA user_version;"
        10: [2020-10-16 01:36:11.695] executeForString took 0ms - succeeded, sql="SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1"
        11: [2020-10-16 01:36:11.695] execute took 0ms - succeeded, sql="CREATE TABLE IF NOT EXISTS android_metadata (locale TEXT)"
        12: [2020-10-16 01:36:11.695] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint=100"
        13: [2020-10-16 01:36:11.695] executeForLong took 0ms - succeeded, sql="PRAGMA wal_autocheckpoint"
        14: [2020-10-16 01:36:11.695] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit=524288"
        15: [2020-10-16 01:36:11.695] executeForLong took 0ms - succeeded, sql="PRAGMA journal_size_limit"
        16: [2020-10-16 01:36:11.695] execute took 0ms - succeeded, sql="PRAGMA synchronous=NORMAL"
        17: [2020-10-16 01:36:11.695] executeForString took 0ms - succeeded, sql="PRAGMA synchronous"
        18: [2020-10-16 01:36:11.682] executeForString took 13ms - succeeded, sql="PRAGMA journal_mode"
        19: [2020-10-16 01:36:11.682] executeForLong took 0ms - succeeded, sql="PRAGMA foreign_keys"
_id:112 name:Phenotype_flags pkg:com.google.android.gms value:alarm_manager_constants:alarm_manager_dummy_flags:always_on_display_constants:anomaly_config:anomaly_config_version:anomaly_detection_constants:app_idle_constants:app_standby_enabled:backup_agent_timeout_parameters:battery_stats_constants:battery_tip_constants:ble_scan_low_power_interval_ms:ble_scan_low_power_window_ms:blocking_helper_dismiss_to_view_ratio:blocking_helper_streak_limit:device_idle_constants:emergency_call_codes_data:gnss_satellite_blacklist:hidden_api_access_log_sampling_rate:hybrid_sysui_battery_warning_flags:job_scheduler_constants:location_background_throttle_interval_ms:network_watchlist_enabled:night_display_forced_auto_mode_available:notification_snooze_options:phenotype_test_setting:smart_replies_in_notifications_flags:sqlite_compatibility_wal_flags:sys_uidcpupower:text_classifier_constants:zram_enabled
_id:140 name:sqlite_compatibility_wal_flags pkg:com.google.android.gms value:
1970-01-01 00:00:21 update sqlite_compatibility_wal_flags

____________________password____________________
        reset-password
      passwordQuality=0x0
      passwordHistoryLength=0
      passwordExpirationTimeout=0
      passwordExpirationDate=0
        c9a19df com.android.settings/.password.SetupChooseLockGeneric
        2e9f3bf com.android.settings/.password.ConfirmDeviceCredentialActivity
        c1c4298 com.android.settings/.password.ScreenLockSuggestionActivity
        2e9f3bf com.android.settings/.password.ConfirmDeviceCredentialActivity
        b2c7279 com.android.settings/.password.SetNewPasswordActivity
        6501a0 com.android.settings/.password.ConfirmDeviceCredentialActivity$InternalActivity
        b2c7279 com.android.settings/.password.SetNewPasswordActivity
_id:10 name:speak_password pkg:android value:1 default:1 defaultSystemSet:true

____________________sha256____________________
        8: [2020-10-16 01:36:52.683] executeForCursorWindow took 0ms - succeeded, sql="SELECT data FROM installation_attempts WHERE 1=1 ORDER BY sha256"
        9: [2020-10-16 01:36:52.683] prepare took 0ms - succeeded, sql="SELECT data FROM installation_attempts WHERE 1=1 ORDER BY sha256"

____________________md5____________________

____________________hardware_id____________________

____________________google_id____________________
